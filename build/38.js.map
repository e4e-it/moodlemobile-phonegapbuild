{"version":3,"sources":["../../src/core/emulator/pages/capture-media/capture-media.module.ts","../../src/core/emulator/pages/capture-media/capture-media.ts"],"names":[],"mappings":"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","file":"38.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { CoreEmulatorCaptureMediaPage } from './capture-media';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { CoreComponentsModule } from '@components/components.module';\r\nimport { CoreDirectivesModule } from '@directives/directives.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CoreEmulatorCaptureMediaPage\r\n    ],\r\n    imports: [\r\n        CoreComponentsModule,\r\n        CoreDirectivesModule,\r\n        IonicPageModule.forChild(CoreEmulatorCaptureMediaPage),\r\n        TranslateModule.forChild()\r\n    ]\r\n})\r\nexport class CoreEmulatorCaptureMediaPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/emulator/pages/capture-media/capture-media.module.ts","// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, OnInit, OnDestroy, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\r\nimport { IonicPage, ViewController, NavParams } from 'ionic-angular';\r\nimport { CoreFileProvider } from '@providers/file';\r\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\r\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\r\nimport { CoreTimeUtilsProvider } from '@providers/utils/time';\r\n\r\n/**\r\n * Page to capture media in browser or desktop.\r\n */\r\n@IonicPage({ segment: 'core-emulator-capture-media' })\r\n@Component({\r\n    selector: 'page-core-emulator-capture-media',\r\n    templateUrl: 'capture-media.html',\r\n})\r\nexport class CoreEmulatorCaptureMediaPage implements OnInit, OnDestroy {\r\n    @ViewChild('streamVideo') streamVideo: ElementRef;\r\n    @ViewChild('previewVideo') previewVideo: ElementRef;\r\n    @ViewChild('imgCanvas') imgCanvas: ElementRef;\r\n    @ViewChild('previewImage') previewImage: ElementRef;\r\n    @ViewChild('streamAudio') streamAudio: ElementRef;\r\n    @ViewChild('previewAudio') previewAudio: ElementRef;\r\n\r\n    title: string; // The title of the page.\r\n    isAudio: boolean; // Whether it should capture audio.\r\n    isVideo: boolean; // Whether it should capture video.\r\n    isImage: boolean; // Whether it should capture image.\r\n    readyToCapture: boolean; // Whether it's ready to capture.\r\n    hasCaptured: boolean; // Whether it has captured something.\r\n    isCapturing: boolean; // Whether it's capturing.\r\n    maxTime: number; // The max time to capture.\r\n    resetChrono: boolean; // Boolean to reset the chrono.\r\n\r\n    protected type: string; // The type to capture: audio, video, image, captureimage.\r\n    protected isCaptureImage: boolean; // To identify if it's capturing an image using media capture plugin (instead of camera).\r\n    protected returnDataUrl: boolean; // Whether it should return a data img. Only if isImage.\r\n    protected facingMode: string; // Camera facing mode.\r\n    protected mimetype: string;\r\n    protected extension: string;\r\n    protected window: any; // Cast window to \"any\" because some of the properties used aren't in the window spec.\r\n    protected mediaRecorder; // To record video/audio.\r\n    protected audioDrawer; // To start/stop the display of audio sound.\r\n    protected quality; // Image only.\r\n    protected previewMedia: HTMLAudioElement | HTMLVideoElement; // The element to preview the audio/video captured.\r\n    protected mediaBlob: Blob; // A Blob where the captured data is stored.\r\n    protected localMediaStream: MediaStream;\r\n\r\n    constructor(private viewCtrl: ViewController, params: NavParams, private domUtils: CoreDomUtilsProvider,\r\n            private timeUtils: CoreTimeUtilsProvider, private fileProvider: CoreFileProvider,\r\n            private textUtils: CoreTextUtilsProvider, private cdr: ChangeDetectorRef) {\r\n        this.window = window;\r\n        this.type = params.get('type');\r\n        this.maxTime = params.get('maxTime');\r\n        this.facingMode = params.get('facingMode') || 'environment';\r\n        this.mimetype = params.get('mimetype');\r\n        this.extension = params.get('extension');\r\n        this.quality = params.get('quality') || 0.92;\r\n        this.returnDataUrl = !!params.get('returnDataUrl');\r\n    }\r\n\r\n    /**\r\n     * Component being initialized.\r\n     */\r\n    ngOnInit(): void {\r\n        this.initVariables();\r\n\r\n        const constraints = {\r\n            video: this.isAudio ? false : { facingMode: this.facingMode },\r\n            audio: !this.isImage\r\n        };\r\n\r\n        navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\r\n            let chunks = [];\r\n            this.localMediaStream = stream;\r\n\r\n            if (!this.isImage) {\r\n                if (this.isVideo) {\r\n                    this.previewMedia = this.previewVideo.nativeElement;\r\n                } else {\r\n                    this.previewMedia = this.previewAudio.nativeElement;\r\n                    this.initAudioDrawer(this.localMediaStream);\r\n                    this.audioDrawer.start();\r\n                }\r\n\r\n                this.mediaRecorder = new this.window.MediaRecorder(this.localMediaStream, { mimeType: this.mimetype });\r\n\r\n                // When video or audio is recorded, add it to the list of chunks.\r\n                this.mediaRecorder.ondataavailable = (e): void => {\r\n                    if (e.data.size > 0) {\r\n                        chunks.push(e.data);\r\n                    }\r\n                };\r\n\r\n                // When recording stops, create a Blob element with the recording and set it to the video or audio.\r\n                this.mediaRecorder.onstop = (): void => {\r\n                    this.mediaBlob = new Blob(chunks);\r\n                    chunks = [];\r\n\r\n                    this.previewMedia.src = window.URL.createObjectURL(this.mediaBlob);\r\n                };\r\n            }\r\n\r\n            if (this.isImage || this.isVideo) {\r\n                let hasLoaded = false,\r\n                    waitTimeout;\r\n\r\n                // Listen for stream ready to display the stream.\r\n                this.streamVideo.nativeElement.onloadedmetadata = (): void => {\r\n                    if (hasLoaded) {\r\n                        // Already loaded or timeout triggered, stop.\r\n                        return;\r\n                    }\r\n\r\n                    hasLoaded = true;\r\n                    clearTimeout(waitTimeout);\r\n                    this.readyToCapture = true;\r\n                    this.streamVideo.nativeElement.onloadedmetadata = null;\r\n                    // Force change detection. Angular doesn't detect these async operations.\r\n                    this.cdr.detectChanges();\r\n                };\r\n\r\n                // Set the stream as the source of the video.\r\n                this.streamVideo.nativeElement.src = window.URL.createObjectURL(this.localMediaStream);\r\n\r\n                // If stream isn't ready in a while, show error.\r\n                waitTimeout = setTimeout(() => {\r\n                    if (!hasLoaded) {\r\n                        // Show error.\r\n                        hasLoaded = true;\r\n                        this.dismissWithError(-1, 'Cannot connect to webcam.');\r\n                    }\r\n                }, 10000);\r\n            } else {\r\n                // It's ready to capture.\r\n                this.readyToCapture = true;\r\n            }\r\n        }).catch((error) => {\r\n            this.dismissWithError(-1, error.message || error);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialize the audio drawer. This code has been extracted from MDN's example on MediaStream Recording:\r\n     * https://github.com/mdn/web-dictaphone\r\n     *\r\n     * @param {MediaStream} stream Stream returned by getUserMedia.\r\n     */\r\n    protected initAudioDrawer(stream: MediaStream): void {\r\n        let skip = true,\r\n            running = false;\r\n\r\n        const audioCtx = new (this.window.AudioContext || this.window.webkitAudioContext)(),\r\n            canvasCtx = this.streamAudio.nativeElement.getContext('2d'),\r\n            source = audioCtx.createMediaStreamSource(stream),\r\n            analyser = audioCtx.createAnalyser(),\r\n            bufferLength = analyser.frequencyBinCount,\r\n            dataArray = new Uint8Array(bufferLength),\r\n            width = this.streamAudio.nativeElement.width,\r\n            height = this.streamAudio.nativeElement.height,\r\n            drawAudio = (): void => {\r\n                if (!running) {\r\n                    return;\r\n                }\r\n\r\n                // Update the draw every animation frame.\r\n                requestAnimationFrame(drawAudio);\r\n\r\n                // Skip half of the frames to improve performance, shouldn't affect the smoothness.\r\n                skip = !skip;\r\n                if (skip) {\r\n                    return;\r\n                }\r\n\r\n                const sliceWidth = width / bufferLength;\r\n                let x = 0;\r\n\r\n                analyser.getByteTimeDomainData(dataArray);\r\n\r\n                canvasCtx.fillStyle = 'rgb(200, 200, 200)';\r\n                canvasCtx.fillRect(0, 0, width, height);\r\n\r\n                canvasCtx.lineWidth = 1;\r\n                canvasCtx.strokeStyle = 'rgb(0, 0, 0)';\r\n\r\n                canvasCtx.beginPath();\r\n\r\n                for (let i = 0; i < bufferLength; i++) {\r\n                    const v = dataArray[i] / 128.0,\r\n                        y = v * height / 2;\r\n\r\n                    if (i === 0) {\r\n                        canvasCtx.moveTo(x, y);\r\n                    } else {\r\n                        canvasCtx.lineTo(x, y);\r\n                    }\r\n\r\n                    x += sliceWidth;\r\n                }\r\n\r\n                canvasCtx.lineTo(width, height / 2);\r\n                canvasCtx.stroke();\r\n            };\r\n\r\n        analyser.fftSize = 2048;\r\n        source.connect(analyser);\r\n\r\n        this.audioDrawer = {\r\n            start: (): void => {\r\n                if (running) {\r\n                    return;\r\n                }\r\n\r\n                running = true;\r\n                drawAudio();\r\n            },\r\n            stop: (): void => {\r\n                running = false;\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Initialize some variables based on the params.\r\n     */\r\n    protected initVariables(): void {\r\n        if (this.type == 'captureimage') {\r\n            this.isCaptureImage = true;\r\n            this.type = 'image';\r\n        }\r\n\r\n        // Initialize some data based on the type of media to capture.\r\n        if (this.type == 'video') {\r\n            this.isVideo = true;\r\n            this.title = 'core.capturevideo';\r\n        } else if (this.type == 'audio') {\r\n            this.isAudio = true;\r\n            this.title = 'core.captureaudio';\r\n        } else if (this.type == 'image') {\r\n            this.isImage = true;\r\n            this.title = 'core.captureimage';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Main action clicked: record or stop recording.\r\n     */\r\n    actionClicked(): void {\r\n        if (this.isCapturing) {\r\n            // It's capturing, stop.\r\n            this.stopCapturing();\r\n            this.cdr.detectChanges();\r\n        } else {\r\n            if (!this.isImage) {\r\n                // Start the capture.\r\n                this.isCapturing = true;\r\n                this.resetChrono = false;\r\n                this.mediaRecorder.start();\r\n                this.cdr.detectChanges();\r\n            } else {\r\n                // Get the image from the video and set it to the canvas, using video width/height.\r\n                const width = this.streamVideo.nativeElement.videoWidth,\r\n                    height = this.streamVideo.nativeElement.videoHeight,\r\n                    loadingModal = this.domUtils.showModalLoading();\r\n\r\n                this.imgCanvas.nativeElement.width = width;\r\n                this.imgCanvas.nativeElement.height = height;\r\n                this.imgCanvas.nativeElement.getContext('2d').drawImage(this.streamVideo.nativeElement, 0, 0, width, height);\r\n\r\n                // Convert the image to blob and show it in an image element.\r\n                this.imgCanvas.nativeElement.toBlob((blob) => {\r\n                    loadingModal.dismiss();\r\n\r\n                    this.mediaBlob = blob;\r\n                    this.previewImage.nativeElement.setAttribute('src', window.URL.createObjectURL(this.mediaBlob));\r\n                    this.hasCaptured = true;\r\n                }, this.mimetype, this.quality);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * User cancelled.\r\n     */\r\n    cancel(): void {\r\n        // Send a \"cancelled\" error like the Cordova plugin does.\r\n        this.dismissWithError(3, 'Canceled.', 'Camera cancelled');\r\n    }\r\n\r\n    /**\r\n     * Discard the captured media.\r\n     */\r\n    discard(): void {\r\n        this.previewMedia && this.previewMedia.pause();\r\n        this.streamVideo && this.streamVideo.nativeElement.play();\r\n        this.audioDrawer && this.audioDrawer.start();\r\n\r\n        this.hasCaptured = false;\r\n        this.isCapturing = false;\r\n        this.resetChrono = true;\r\n        delete this.mediaBlob;\r\n        this.cdr.detectChanges();\r\n    }\r\n\r\n    /**\r\n     * Close the modal, returning some data (success).\r\n     *\r\n     * @param {any} data Data to return.\r\n     */\r\n    dismissWithData(data: any): void {\r\n        this.viewCtrl.dismiss(data, 'success');\r\n    }\r\n\r\n    /**\r\n     * Close the modal, returning an error.\r\n     *\r\n     * @param {number} code Error code. Will not be used if it's a Camera capture.\r\n     * @param {string} message Error message.\r\n     * @param {string} [cameraMessage] A specific message to use if it's a Camera capture. If not set, message will be used.\r\n     */\r\n    dismissWithError(code: number, message: string, cameraMessage?: string): void {\r\n        const isCamera = this.isImage && !this.isCaptureImage,\r\n            error = isCamera ? (cameraMessage || message) : { code: code, message: message };\r\n        this.viewCtrl.dismiss(error, 'error');\r\n    }\r\n\r\n    /**\r\n     * Done capturing, write the file.\r\n     */\r\n    done(): void {\r\n        if (this.returnDataUrl) {\r\n            // Return the image as a base64 string.\r\n            this.dismissWithData(this.imgCanvas.nativeElement.toDataURL(this.mimetype, this.quality));\r\n\r\n            return;\r\n        }\r\n\r\n        if (!this.mediaBlob) {\r\n            // Shouldn't happen.\r\n            this.domUtils.showErrorModal('Please capture the media first.');\r\n\r\n            return;\r\n        }\r\n\r\n        // Create the file and return it.\r\n        const fileName = this.type + '_' + this.timeUtils.readableTimestamp() + '.' + this.extension,\r\n            path = this.textUtils.concatenatePaths(CoreFileProvider.TMPFOLDER, 'media/' + fileName),\r\n            loadingModal = this.domUtils.showModalLoading();\r\n\r\n        this.fileProvider.writeFile(path, this.mediaBlob).then((fileEntry) => {\r\n            if (this.isImage && !this.isCaptureImage) {\r\n                this.dismissWithData(fileEntry.toURL());\r\n            } else {\r\n                // The capture plugin returns a MediaFile, not a FileEntry.\r\n                // The only difference is that it supports a new function that won't be supported in desktop.\r\n                fileEntry.getFormatData = (successFn, errorFn): any => {\r\n                    // Nothing to do.\r\n                };\r\n\r\n                this.dismissWithData([fileEntry]);\r\n            }\r\n        }).catch((err) => {\r\n            this.domUtils.showErrorModal(err);\r\n        }).finally(() => {\r\n            loadingModal.dismiss();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Stop capturing. Only for video and audio.\r\n     */\r\n    stopCapturing(): void {\r\n        this.streamVideo && this.streamVideo.nativeElement.pause();\r\n        this.audioDrawer && this.audioDrawer.stop();\r\n        this.mediaRecorder && this.mediaRecorder.stop();\r\n        this.isCapturing = false;\r\n        this.hasCaptured = true;\r\n    }\r\n\r\n    /**\r\n     * Page destroyed.\r\n     */\r\n    ngOnDestroy(): void {\r\n        const tracks = this.localMediaStream.getTracks();\r\n        tracks.forEach((track) => {\r\n            track.stop();\r\n        });\r\n        this.streamVideo && this.streamVideo.nativeElement.pause();\r\n        this.previewMedia && this.previewMedia.pause();\r\n        this.audioDrawer && this.audioDrawer.stop();\r\n        delete this.mediaBlob;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/emulator/pages/capture-media/capture-media.ts"],"sourceRoot":""}