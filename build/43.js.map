{"version":3,"sources":["../../src/core/courses/pages/course-preview/course-preview.module.ts","../../src/core/courses/pages/course-preview/course-preview.ts"],"names":[],"mappings":"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","file":"43.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { CoreCoursesCoursePreviewPage } from './course-preview';\r\nimport { CoreComponentsModule } from '@components/components.module';\r\nimport { CoreDirectivesModule } from '@directives/directives.module';\r\nimport { CorePipesModule } from '@pipes/pipes.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CoreCoursesCoursePreviewPage,\r\n    ],\r\n    imports: [\r\n        CoreComponentsModule,\r\n        CoreDirectivesModule,\r\n        CorePipesModule,\r\n        IonicPageModule.forChild(CoreCoursesCoursePreviewPage),\r\n        TranslateModule.forChild()\r\n    ],\r\n})\r\nexport class CoreCoursesCoursePreviewPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/courses/pages/course-preview/course-preview.module.ts","// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, OnDestroy, NgZone } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, Platform, ModalController, Modal } from 'ionic-angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CoreAppProvider } from '@providers/app';\r\nimport { CoreEventsProvider } from '@providers/events';\r\nimport { CoreSitesProvider } from '@providers/sites';\r\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\r\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\r\nimport { CoreCoursesProvider } from '../../providers/courses';\r\nimport { CoreCourseOptionsDelegate } from '@core/course/providers/options-delegate';\r\nimport { CoreCourseProvider } from '@core/course/providers/course';\r\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\r\nimport { CoreCourseFormatDelegate } from '@core/course/providers/format-delegate';\r\n\r\n/**\r\n * Page that allows \"previewing\" a course and enrolling in it if enabled and not enrolled.\r\n */\r\n@IonicPage({ segment: 'core-courses-course-preview' })\r\n@Component({\r\n    selector: 'page-core-courses-course-preview',\r\n    templateUrl: 'course-preview.html',\r\n})\r\nexport class CoreCoursesCoursePreviewPage implements OnDestroy {\r\n    course: any;\r\n    isEnrolled: boolean;\r\n    canAccessCourse = true;\r\n    component = 'CoreCoursesCoursePreview';\r\n    selfEnrolInstances: any[] = [];\r\n    paypalEnabled: boolean;\r\n    dataLoaded: boolean;\r\n    avoidOpenCourse = false;\r\n    prefetchCourseData = {\r\n        prefetchCourseIcon: 'spinner',\r\n        title: 'core.course.downloadcourse'\r\n    };\r\n    downloadCourseEnabled: boolean;\r\n\r\n    protected guestWSAvailable: boolean;\r\n    protected isGuestEnabled = false;\r\n    protected guestInstanceId: number;\r\n    protected enrollmentMethods: any[];\r\n    protected waitStart = 0;\r\n    protected enrolUrl: string;\r\n    protected courseUrl: string;\r\n    protected paypalReturnUrl: string;\r\n    protected isMobile: boolean;\r\n    protected isDesktop: boolean;\r\n    protected selfEnrolModal: Modal;\r\n    protected pageDestroyed = false;\r\n    protected currentInstanceId: number;\r\n    protected courseStatusObserver;\r\n\r\n    constructor(private navCtrl: NavController, navParams: NavParams, private sitesProvider: CoreSitesProvider,\r\n            private domUtils: CoreDomUtilsProvider, private textUtils: CoreTextUtilsProvider, appProvider: CoreAppProvider,\r\n            private coursesProvider: CoreCoursesProvider, private platform: Platform, private modalCtrl: ModalController,\r\n            private translate: TranslateService, private eventsProvider: CoreEventsProvider,\r\n            private courseOptionsDelegate: CoreCourseOptionsDelegate, private courseHelper: CoreCourseHelperProvider,\r\n            private courseProvider: CoreCourseProvider, private courseFormatDelegate: CoreCourseFormatDelegate,\r\n            private zone: NgZone) {\r\n\r\n        this.course = navParams.get('course');\r\n        this.avoidOpenCourse = navParams.get('avoidOpenCourse');\r\n        this.isMobile = appProvider.isMobile();\r\n        this.isDesktop = appProvider.isDesktop();\r\n        this.downloadCourseEnabled = !this.coursesProvider.isDownloadCourseDisabledInSite();\r\n\r\n        if (this.downloadCourseEnabled) {\r\n            // Listen for status change in course.\r\n            this.courseStatusObserver = this.eventsProvider.on(CoreEventsProvider.COURSE_STATUS_CHANGED, (data) => {\r\n                if (data.courseId == this.course.id) {\r\n                    this.updateCourseStatus(data.status);\r\n                }\r\n            }, this.sitesProvider.getCurrentSiteId());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * View loaded.\r\n     */\r\n    ionViewDidLoad(): void {\r\n        const currentSite = this.sitesProvider.getCurrentSite(),\r\n            currentSiteUrl = currentSite && currentSite.getURL();\r\n\r\n        this.paypalEnabled = this.course.enrollmentmethods && this.course.enrollmentmethods.indexOf('paypal') > -1;\r\n        this.guestWSAvailable = this.coursesProvider.isGuestWSAvailable();\r\n        this.enrolUrl = this.textUtils.concatenatePaths(currentSiteUrl, 'enrol/index.php?id=' + this.course.id);\r\n        this.courseUrl = this.textUtils.concatenatePaths(currentSiteUrl, 'course/view.php?id=' + this.course.id);\r\n        this.paypalReturnUrl = this.textUtils.concatenatePaths(currentSiteUrl, 'enrol/paypal/return.php');\r\n        if (this.course.overviewfiles && this.course.overviewfiles.length > 0) {\r\n            this.course.imageThumb = this.course.overviewfiles[0].fileurl;\r\n        }\r\n\r\n        // Initialize the self enrol modal.\r\n        this.selfEnrolModal = this.modalCtrl.create('CoreCoursesSelfEnrolPasswordPage');\r\n        this.selfEnrolModal.onDidDismiss((password: string) => {\r\n            if (typeof password != 'undefined') {\r\n                this.selfEnrolInCourse(password, this.currentInstanceId);\r\n            }\r\n        });\r\n\r\n        this.getCourse().finally(() => {\r\n            if (!this.downloadCourseEnabled) {\r\n                // Cannot download the whole course, stop.\r\n                return;\r\n            }\r\n\r\n            // Determine course prefetch icon.\r\n            this.courseHelper.getCourseStatusIconAndTitle(this.course.id).then((data) => {\r\n                this.prefetchCourseData.prefetchCourseIcon = data.icon;\r\n                this.prefetchCourseData.title = data.title;\r\n\r\n                if (data.icon == 'spinner') {\r\n                    // Course is being downloaded. Get the download promise.\r\n                    const promise = this.courseHelper.getCourseDownloadPromise(this.course.id);\r\n                    if (promise) {\r\n                        // There is a download promise. If it fails, show an error.\r\n                        promise.catch((error) => {\r\n                            if (!this.pageDestroyed) {\r\n                                this.domUtils.showErrorModalDefault(error, 'core.course.errordownloadingcourse', true);\r\n                            }\r\n                        });\r\n                    } else {\r\n                        // No download, this probably means that the app was closed while downloading. Set previous status.\r\n                        this.courseProvider.setCoursePreviousStatus(this.course.id);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Page destroyed.\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.pageDestroyed = true;\r\n\r\n        if (this.courseStatusObserver) {\r\n            this.courseStatusObserver.off();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if the user can access as guest.\r\n     *\r\n     * @return {Promise<boolean>} Promise resolved if can access as guest, rejected otherwise. Resolve param indicates if\r\n     *                            password is required for guest access.\r\n     */\r\n    protected canAccessAsGuest(): Promise<boolean> {\r\n        if (!this.isGuestEnabled) {\r\n            return Promise.reject(null);\r\n        }\r\n\r\n        // Search instance ID of guest enrolment method.\r\n        this.guestInstanceId = undefined;\r\n        for (let i = 0; i < this.enrollmentMethods.length; i++) {\r\n            const method = this.enrollmentMethods[i];\r\n            if (method.type == 'guest') {\r\n                this.guestInstanceId = method.id;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (this.guestInstanceId) {\r\n            return this.coursesProvider.getCourseGuestEnrolmentInfo(this.guestInstanceId).then((info) => {\r\n                if (!info.status) {\r\n                    // Not active, reject.\r\n                    return Promise.reject(null);\r\n                }\r\n\r\n                return info.passwordrequired;\r\n            });\r\n        }\r\n\r\n        return Promise.reject(null);\r\n    }\r\n\r\n    /**\r\n     * Convenience function to get course. We use this to determine if a user can see the course or not.\r\n     *\r\n     * @param {boolean} refresh Whether the user is refreshing the data.\r\n     */\r\n    protected getCourse(refresh?: boolean): Promise<any> {\r\n        // Get course enrolment methods.\r\n        this.selfEnrolInstances = [];\r\n\r\n        return this.coursesProvider.getCourseEnrolmentMethods(this.course.id).then((methods) => {\r\n            this.enrollmentMethods = methods;\r\n\r\n            this.enrollmentMethods.forEach((method) => {\r\n                if (method.type === 'self') {\r\n                    this.selfEnrolInstances.push(method);\r\n                } else if (this.guestWSAvailable && method.type === 'guest') {\r\n                    this.isGuestEnabled = true;\r\n                }\r\n            });\r\n        }).catch((error) => {\r\n            this.domUtils.showErrorModalDefault(error, 'Error getting enrolment data');\r\n        }).then(() => {\r\n            // Check if user is enrolled in the course.\r\n            return this.coursesProvider.getUserCourse(this.course.id).then((course) => {\r\n                this.isEnrolled = true;\r\n\r\n                return course;\r\n            }).catch(() => {\r\n                // The user is not enrolled in the course. Use getCourses to see if it's an admin/manager and can see the course.\r\n                this.isEnrolled = false;\r\n\r\n                return this.coursesProvider.getCourse(this.course.id);\r\n            }).then((course) => {\r\n                // Success retrieving the course, we can assume the user has permissions to view it.\r\n                this.course.fullname = course.fullname || this.course.fullname;\r\n                this.course.summary = course.summary || this.course.summary;\r\n                this.canAccessCourse = true;\r\n            }).catch(() => {\r\n                // The user is not an admin/manager. Check if we can provide guest access to the course.\r\n                return this.canAccessAsGuest().then((passwordRequired) => {\r\n                    this.canAccessCourse = !passwordRequired;\r\n                }).catch(() => {\r\n                    this.canAccessCourse = false;\r\n                });\r\n            });\r\n        }).finally(() => {\r\n            this.dataLoaded = true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Open the course.\r\n     */\r\n    openCourse(): void {\r\n        if (!this.canAccessCourse || this.avoidOpenCourse) {\r\n            // Course cannot be opened or we are avoiding opening because we accessed from inside a course.\r\n            return;\r\n        }\r\n\r\n        this.courseFormatDelegate.openCourse(this.navCtrl, this.course);\r\n    }\r\n\r\n    /**\r\n     * Enrol using PayPal.\r\n     */\r\n    paypalEnrol(): void {\r\n        let window,\r\n            hasReturnedFromPaypal = false,\r\n            inAppLoadSubscription,\r\n            inAppFinishSubscription,\r\n            inAppExitSubscription,\r\n            appResumeSubscription;\r\n\r\n        const urlLoaded = (event): void => {\r\n                if (event.url.indexOf(this.paypalReturnUrl) != -1) {\r\n                    hasReturnedFromPaypal = true;\r\n                } else if (event.url.indexOf(this.courseUrl) != -1 && hasReturnedFromPaypal) {\r\n                    // User reached the course index page after returning from PayPal, close the InAppBrowser.\r\n                    inAppClosed();\r\n                    window.close();\r\n                }\r\n            },\r\n            inAppClosed = (): void => {\r\n                // InAppBrowser closed, refresh data.\r\n                unsubscribeAll();\r\n\r\n                if (!this.dataLoaded) {\r\n                    return;\r\n                }\r\n                this.dataLoaded = false;\r\n                this.refreshData();\r\n            },\r\n            unsubscribeAll = (): void => {\r\n                inAppLoadSubscription && inAppLoadSubscription.unsubscribe();\r\n                inAppFinishSubscription && inAppFinishSubscription.unsubscribe();\r\n                inAppExitSubscription && inAppExitSubscription.unsubscribe();\r\n                appResumeSubscription && appResumeSubscription.unsubscribe();\r\n            };\r\n\r\n        // Open the enrolment page in InAppBrowser.\r\n        this.sitesProvider.getCurrentSite().openInAppWithAutoLogin(this.enrolUrl).then((w) => {\r\n            window = w;\r\n\r\n            if (this.isDesktop || this.isMobile) {\r\n                // Observe loaded pages in the InAppBrowser to check if the enrol process has ended.\r\n                inAppLoadSubscription = window.on('loadstart').subscribe((event) => {\r\n                    // Execute the callback in the Angular zone, so change detection doesn't stop working.\r\n                    this.zone.run(() => urlLoaded(event));\r\n                });\r\n                // Observe window closed.\r\n                inAppExitSubscription = window.on('exit').subscribe(() => {\r\n                    // Execute the callback in the Angular zone, so change detection doesn't stop working.\r\n                    this.zone.run(inAppClosed);\r\n                });\r\n            }\r\n\r\n            if (this.isDesktop) {\r\n                // In desktop, also observe stop loading since some pages don't throw the loadstart event.\r\n                inAppFinishSubscription = window.on('loadstop').subscribe(urlLoaded);\r\n\r\n                // Since the user can switch windows, reload the data if he comes back to the app.\r\n                appResumeSubscription = this.platform.resume.subscribe(() => {\r\n                    if (!this.dataLoaded) {\r\n                        return;\r\n                    }\r\n                    this.dataLoaded = false;\r\n                    this.refreshData();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * User clicked in a self enrol button.\r\n     *\r\n     * @param {number} instanceId The instance ID of the enrolment method.\r\n     */\r\n    selfEnrolClicked(instanceId: number): void {\r\n        this.domUtils.showConfirm(this.translate.instant('core.courses.confirmselfenrol')).then(() => {\r\n            this.selfEnrolInCourse('', instanceId);\r\n        }).catch(() => {\r\n            // User cancelled.\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Self enrol in a course.\r\n     *\r\n     * @param {string} password Password to use.\r\n     * @param {number} instanceId The instance ID.\r\n     * @return {Promise<any>} Promise resolved when self enrolled.\r\n     */\r\n    selfEnrolInCourse(password: string, instanceId: number): Promise<any> {\r\n        const modal = this.domUtils.showModalLoading('core.loading', true);\r\n\r\n        return this.coursesProvider.selfEnrol(this.course.id, password, instanceId).then(() => {\r\n            // Close modal and refresh data.\r\n            this.isEnrolled = true;\r\n            this.dataLoaded = false;\r\n\r\n            // Sometimes the list of enrolled courses takes a while to be updated. Wait for it.\r\n            this.waitForEnrolled(true).then(() => {\r\n                this.refreshData().finally(() => {\r\n                    // My courses have been updated, trigger event.\r\n                    this.eventsProvider.trigger(\r\n                        CoreCoursesProvider.EVENT_MY_COURSES_UPDATED, {}, this.sitesProvider.getCurrentSiteId());\r\n                });\r\n            });\r\n        }).catch((error) => {\r\n            if (error && error.code === CoreCoursesProvider.ENROL_INVALID_KEY) {\r\n                // Invalid password, show the modal to enter the password.\r\n                this.selfEnrolModal.present();\r\n                this.currentInstanceId = instanceId;\r\n\r\n                if (!password) {\r\n                    // No password entered, don't show error.\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this.domUtils.showErrorModalDefault(error, 'core.courses.errorselfenrol', true);\r\n        }).finally(() => {\r\n            modal.dismiss();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Refresh the data.\r\n     *\r\n     * @param {any} [refresher] The refresher if this was triggered by a Pull To Refresh.\r\n     */\r\n    refreshData(refresher?: any): Promise<any> {\r\n        const promises = [];\r\n\r\n        promises.push(this.coursesProvider.invalidateUserCourses());\r\n        promises.push(this.coursesProvider.invalidateCourse(this.course.id));\r\n        promises.push(this.coursesProvider.invalidateCourseEnrolmentMethods(this.course.id));\r\n        promises.push(this.courseOptionsDelegate.clearAndInvalidateCoursesOptions(this.course.id));\r\n        if (this.guestInstanceId) {\r\n            promises.push(this.coursesProvider.invalidateCourseGuestEnrolmentInfo(this.guestInstanceId));\r\n        }\r\n\r\n        return Promise.all(promises).finally(() => {\r\n            return this.getCourse(true);\r\n        }).finally(() => {\r\n            if (refresher) {\r\n                refresher.complete();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update the course status icon and title.\r\n     *\r\n     * @param {string} status Status to show.\r\n     */\r\n    protected updateCourseStatus(status: string): void {\r\n        const statusData = this.courseHelper.getCourseStatusIconAndTitleFromStatus(status);\r\n\r\n        this.prefetchCourseData.prefetchCourseIcon = statusData.icon;\r\n        this.prefetchCourseData.title = statusData.title;\r\n    }\r\n\r\n    /**\r\n     * Wait for the user to be enrolled in the course.\r\n     *\r\n     * @param {boolean} first If it's the first call (true) or it's a recursive call (false).\r\n     * @return {Promise<any>} Promise resolved when enrolled or timeout.\r\n     */\r\n    protected waitForEnrolled(first?: boolean): Promise<any> {\r\n        if (first) {\r\n            this.waitStart = Date.now();\r\n        }\r\n\r\n        // Check if user is enrolled in the course.\r\n        return this.coursesProvider.invalidateUserCourses().catch(() => {\r\n            // Ignore errors.\r\n        }).then(() => {\r\n            return this.coursesProvider.getUserCourse(this.course.id);\r\n        }).catch(() => {\r\n            // Not enrolled, wait a bit and try again.\r\n            if (this.pageDestroyed || (Date.now() - this.waitStart > 60000)) {\r\n                // Max time reached or the user left the view, stop.\r\n                return;\r\n            }\r\n\r\n            return new Promise((resolve, reject): void => {\r\n                setTimeout(() => {\r\n                    if (!this.pageDestroyed) {\r\n                        // Wait again.\r\n                        this.waitForEnrolled().then(resolve);\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                }, 5000);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Prefetch the course.\r\n     */\r\n    prefetchCourse(): void {\r\n        this.courseHelper.confirmAndPrefetchCourse(this.prefetchCourseData, this.course).catch((error) => {\r\n            if (!this.pageDestroyed) {\r\n                this.domUtils.showErrorModalDefault(error, 'core.course.errordownloadingcourse', true);\r\n            }\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/courses/pages/course-preview/course-preview.ts"],"sourceRoot":""}