{"version":3,"sources":["../../src/core/login/pages/reconnect/reconnect.module.ts","../../src/core/login/pages/reconnect/reconnect.ts"],"names":[],"mappings":"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","file":"29.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { CoreLoginReconnectPage } from './reconnect';\r\nimport { CoreComponentsModule } from '@components/components.module';\r\nimport { CoreDirectivesModule } from '@directives/directives.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CoreLoginReconnectPage\r\n    ],\r\n    imports: [\r\n        CoreComponentsModule,\r\n        CoreDirectivesModule,\r\n        IonicPageModule.forChild(CoreLoginReconnectPage),\r\n        TranslateModule.forChild()\r\n    ]\r\n})\r\nexport class CoreLoginReconnectPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/login/pages/reconnect/reconnect.module.ts","// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { CoreAppProvider } from '@providers/app';\r\nimport { CoreSitesProvider } from '@providers/sites';\r\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\r\nimport { CoreLoginHelperProvider } from '../../providers/helper';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n/**\r\n * Page to enter the user password to reconnect to a site.\r\n */\r\n@IonicPage({ segment: 'core-login-reconnect' })\r\n@Component({\r\n    selector: 'page-core-login-reconnect',\r\n    templateUrl: 'reconnect.html',\r\n})\r\nexport class CoreLoginReconnectPage {\r\n    credForm: FormGroup;\r\n    siteUrl: string;\r\n    username: string;\r\n    siteName: string;\r\n    logoUrl: string;\r\n    identityProviders: any[];\r\n    site: any;\r\n\r\n    protected infoSiteUrl: string;\r\n    protected pageName: string;\r\n    protected pageParams: any;\r\n    protected siteConfig: any;\r\n    protected isLoggedOut: boolean;\r\n    protected siteId: string;\r\n\r\n    constructor(private navCtrl: NavController, navParams: NavParams, fb: FormBuilder, private appProvider: CoreAppProvider,\r\n        private sitesProvider: CoreSitesProvider, private loginHelper: CoreLoginHelperProvider,\r\n        private domUtils: CoreDomUtilsProvider) {\r\n\r\n        const currentSite = this.sitesProvider.getCurrentSite();\r\n\r\n        this.infoSiteUrl = navParams.get('infoSiteUrl');\r\n        this.pageName = navParams.get('pageName');\r\n        this.pageParams = navParams.get('pageParams');\r\n        this.siteConfig = navParams.get('siteConfig');\r\n        this.siteUrl = navParams.get('siteUrl');\r\n        this.siteId = navParams.get('siteId');\r\n\r\n        this.isLoggedOut = currentSite && currentSite.isLoggedOut();\r\n        this.credForm = fb.group({\r\n            password: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    /**\r\n     * View loaded.\r\n     */\r\n    ionViewDidLoad(): void {\r\n        if (this.siteConfig) {\r\n            this.identityProviders = this.loginHelper.getValidIdentityProviders(this.siteConfig);\r\n        }\r\n\r\n        this.sitesProvider.getSite(this.siteId).then((site) => {\r\n            this.site = {\r\n                id: site.id,\r\n                fullname: site.infos.fullname,\r\n                avatar: site.infos.userpictureurl\r\n            };\r\n\r\n            this.username = site.infos.username;\r\n            this.siteUrl = site.infos.siteurl;\r\n            this.siteName = site.infos.sitename;\r\n\r\n            // Check logoURL if user avatar is not set.\r\n            if (this.site.avatar.startsWith(site.infos.siteurl + '/theme/image.php')) {\r\n                this.site.avatar = false;\r\n\r\n                return site.getPublicConfig().then((config) => {\r\n                    this.logoUrl = config.logourl || config.compactlogourl;\r\n                }).catch(() => {\r\n                    // Ignore errors.\r\n                });\r\n            }\r\n        }).catch(() => {\r\n            // Shouldn't happen. Just leave the view.\r\n            this.cancel();\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Cancel reconnect.\r\n     */\r\n    cancel(): void {\r\n        this.sitesProvider.logout().finally(() => {\r\n            this.navCtrl.setRoot('CoreLoginSitesPage');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Tries to authenticate the user.\r\n     */\r\n    login(): void {\r\n        this.appProvider.closeKeyboard();\r\n\r\n        // Get input data.\r\n        const siteUrl = this.siteUrl,\r\n            username = this.username,\r\n            password = this.credForm.value.password;\r\n\r\n        if (!password) {\r\n            this.domUtils.showErrorModal('core.login.passwordrequired', true);\r\n\r\n            return;\r\n        }\r\n\r\n        if (!this.appProvider.isOnline()) {\r\n            this.domUtils.showErrorModal('core.networkerrormsg', true);\r\n\r\n            return;\r\n        }\r\n\r\n        const modal = this.domUtils.showModalLoading();\r\n\r\n        // Start the authentication process.\r\n        this.sitesProvider.getUserToken(siteUrl, username, password).then((data) => {\r\n            return this.sitesProvider.updateSiteToken(this.infoSiteUrl, username, data.token, data.privateToken).then(() => {\r\n                // Update site info too because functions might have changed (e.g. unisntall local_mobile).\r\n                return this.sitesProvider.updateSiteInfoByUrl(this.infoSiteUrl, username).then(() => {\r\n                    // Reset fields so the data is not in the view anymore.\r\n                    this.credForm.controls['password'].reset();\r\n\r\n                    if (this.pageName) {\r\n                        // Page defined, go to that page instead of site initial page.\r\n                        return this.navCtrl.setRoot(this.pageName, this.pageParams);\r\n                    } else {\r\n                        return this.loginHelper.goToSiteInitialPage();\r\n                    }\r\n                }).catch((error) => {\r\n                    // Error, go back to login page.\r\n                    this.domUtils.showErrorModalDefault(error, 'core.login.errorupdatesite', true);\r\n                    this.cancel();\r\n                });\r\n            });\r\n        }).catch((error) => {\r\n            this.loginHelper.treatUserTokenError(siteUrl, error);\r\n        }).finally(() => {\r\n            modal.dismiss();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * An OAuth button was clicked.\r\n     *\r\n     * @param {any} provider The provider that was clicked.\r\n     */\r\n    oauthClicked(provider: any): void {\r\n        if (!this.loginHelper.openBrowserForOAuthLogin(this.siteUrl, provider, this.siteConfig.launchurl)) {\r\n            this.domUtils.showErrorModal('Invalid data.');\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/login/pages/reconnect/reconnect.ts"],"sourceRoot":""}