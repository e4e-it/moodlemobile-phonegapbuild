{"version":3,"sources":["../../src/core/login/pages/init/init.module.ts","../../src/core/login/pages/init/init.ts"],"names":[],"mappings":"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","file":"30.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { CoreLoginInitPage } from './init';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CoreLoginInitPage,\r\n    ],\r\n    imports: [\r\n        IonicPageModule.forChild(CoreLoginInitPage),\r\n    ],\r\n})\r\nexport class CoreLoginInitPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/login/pages/init/init.module.ts","// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component } from '@angular/core';\r\nimport { IonicPage, NavController } from 'ionic-angular';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { CoreAppProvider } from '@providers/app';\r\nimport { CoreInitDelegate } from '@providers/init';\r\nimport { CoreSitesProvider } from '@providers/sites';\r\nimport { CoreConstants } from '../../../constants';\r\nimport { CoreLoginHelperProvider } from '../../providers/helper';\r\n\r\n/**\r\n * Page that displays a \"splash screen\" while the app is being initialized.\r\n */\r\n@IonicPage({ segment: 'core-login-init' })\r\n@Component({\r\n    selector: 'page-core-login-init',\r\n    templateUrl: 'init.html',\r\n})\r\nexport class CoreLoginInitPage {\r\n\r\n    constructor(private navCtrl: NavController, private appProvider: CoreAppProvider, private initDelegate: CoreInitDelegate,\r\n        private sitesProvider: CoreSitesProvider, private loginHelper: CoreLoginHelperProvider,\r\n        private splashScreen: SplashScreen) { }\r\n\r\n    /**\r\n     * View loaded.\r\n     */\r\n    ionViewDidLoad(): void {\r\n        // Wait for the app to be ready.\r\n        this.initDelegate.ready().then(() => {\r\n            // Check if there was a pending redirect.\r\n            const redirectData = this.appProvider.getRedirect();\r\n            if (redirectData.siteId && redirectData.page) {\r\n                // Unset redirect data.\r\n                this.appProvider.storeRedirect('', '', '');\r\n\r\n                // Only accept the redirect if it was stored less than 20 seconds ago.\r\n                if (Date.now() - redirectData.timemodified < 20000) {\r\n                    if (redirectData.siteId != CoreConstants.NO_SITE_ID) {\r\n                        // The redirect is pointing to a site, load it.\r\n                        return this.sitesProvider.loadSite(redirectData.siteId).then(() => {\r\n                            if (!this.loginHelper.isSiteLoggedOut(redirectData.page, redirectData.params)) {\r\n                                return this.navCtrl.setRoot(redirectData.page, redirectData.params, { animate: false });\r\n                            }\r\n                        }).catch(() => {\r\n                            // Site doesn't exist.\r\n                            return this.loadPage();\r\n                        });\r\n                    } else {\r\n                        // No site to load, just open the state.\r\n                        return this.navCtrl.setRoot(redirectData.page, redirectData.params, { animate: false });\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this.loadPage();\r\n        }).then(() => {\r\n            // If we hide the splash screen now, the init view is still seen for an instant. Wait a bit to make sure it isn't seen.\r\n            setTimeout(() => {\r\n                this.splashScreen.hide();\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Load the right page.\r\n     *\r\n     * @return {Promise<any>} Promise resolved when done.\r\n     */\r\n    protected loadPage(): Promise<any> {\r\n        if (this.sitesProvider.isLoggedIn()) {\r\n            if (!this.loginHelper.isSiteLoggedOut()) {\r\n                // User is logged in, go to site initial page.\r\n                return this.loginHelper.goToSiteInitialPage();\r\n            } else {\r\n                // The site is marked as logged out. Logout and try again.\r\n                return this.sitesProvider.logout().then(() => {\r\n                    return this.loadPage();\r\n                });\r\n            }\r\n        } else {\r\n            return this.sitesProvider.hasSites().then((hasSites) => {\r\n                if (hasSites) {\r\n                    return this.navCtrl.setRoot('CoreLoginSitesPage');\r\n                } else {\r\n                    return this.loginHelper.goToAddSite(true);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/login/pages/init/init.ts"],"sourceRoot":""}