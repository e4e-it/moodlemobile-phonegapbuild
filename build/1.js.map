{"version":3,"sources":["../../src/addon/messages/pages/index/index.module.ts","../../src/addon/messages/components/components.module.ts","../../src/addon/messages/components/discussions/discussions.ts","../../src/addon/messages/components/contacts/contacts.ts","../../src/addon/messages/pages/index/index.ts"],"names":[],"mappings":"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","file":"1.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AddonMessagesIndexPage } from './index';\r\nimport { CoreComponentsModule } from '@components/components.module';\r\nimport { CoreDirectivesModule } from '@directives/directives.module';\r\nimport { AddonMessagesComponentsModule } from '../../components/components.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AddonMessagesIndexPage,\r\n    ],\r\n    imports: [\r\n        CoreComponentsModule,\r\n        CoreDirectivesModule,\r\n        AddonMessagesComponentsModule,\r\n        IonicPageModule.forChild(AddonMessagesIndexPage),\r\n        TranslateModule.forChild()\r\n    ],\r\n})\r\nexport class AddonMessagesIndexPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messages/pages/index/index.module.ts","// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonicModule } from 'ionic-angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { CoreComponentsModule } from '@components/components.module';\r\nimport { CoreDirectivesModule } from '@directives/directives.module';\r\nimport { CorePipesModule } from '@pipes/pipes.module';\r\nimport { AddonMessagesDiscussionsComponent } from '../components/discussions/discussions';\r\nimport { AddonMessagesContactsComponent } from '../components/contacts/contacts';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AddonMessagesDiscussionsComponent,\r\n        AddonMessagesContactsComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        IonicModule,\r\n        TranslateModule.forChild(),\r\n        CoreComponentsModule,\r\n        CoreDirectivesModule,\r\n        CorePipesModule\r\n    ],\r\n    providers: [\r\n    ],\r\n    exports: [\r\n        AddonMessagesDiscussionsComponent,\r\n        AddonMessagesContactsComponent\r\n    ]\r\n})\r\nexport class AddonMessagesComponentsModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messages/components/components.module.ts","// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, OnDestroy } from '@angular/core';\r\nimport { Platform, NavParams } from 'ionic-angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CoreEventsProvider } from '@providers/events';\r\nimport { CoreSitesProvider } from '@providers/sites';\r\nimport { AddonMessagesProvider } from '../../providers/messages';\r\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\r\nimport { CoreUtilsProvider } from '@providers/utils/utils';\r\nimport { CoreAppProvider } from '@providers/app';\r\nimport { AddonPushNotificationsDelegate } from '@addon/pushnotifications/providers/delegate';\r\n\r\n/**\r\n * Component that displays the list of discussions.\r\n */\r\n@Component({\r\n    selector: 'addon-messages-discussions',\r\n    templateUrl: 'addon-messages-discussions.html',\r\n})\r\nexport class AddonMessagesDiscussionsComponent implements OnDestroy {\r\n    protected newMessagesObserver: any;\r\n    protected readChangedObserver: any;\r\n    protected cronObserver: any;\r\n    protected appResumeSubscription: any;\r\n    protected loadingMessages: string;\r\n    protected siteId: string;\r\n\r\n    loaded = false;\r\n    loadingMessage: string;\r\n    discussions: any;\r\n    discussionUserId: number;\r\n    pushObserver: any;\r\n    search = {\r\n        enabled: false,\r\n        showResults: false,\r\n        results: [],\r\n        loading: '',\r\n        text: ''\r\n    };\r\n\r\n    constructor(private eventsProvider: CoreEventsProvider, sitesProvider: CoreSitesProvider, translate: TranslateService,\r\n            private messagesProvider: AddonMessagesProvider, private domUtils: CoreDomUtilsProvider, navParams: NavParams,\r\n            private appProvider: CoreAppProvider, platform: Platform, utils: CoreUtilsProvider,\r\n            pushNotificationsDelegate: AddonPushNotificationsDelegate) {\r\n\r\n        this.search.loading =  translate.instant('core.searching');\r\n        this.loadingMessages = translate.instant('core.loading');\r\n        this.siteId = sitesProvider.getCurrentSiteId();\r\n\r\n        // Update discussions when new message is received.\r\n        this.newMessagesObserver = eventsProvider.on(AddonMessagesProvider.NEW_MESSAGE_EVENT, (data) => {\r\n            if (data.userId) {\r\n                const discussion = this.discussions.find((disc) => {\r\n                    return disc.message.user == data.userId;\r\n                });\r\n\r\n                if (typeof discussion == 'undefined') {\r\n                    this.loaded = false;\r\n                    this.refreshData().finally(() => {\r\n                        this.loaded = true;\r\n                    });\r\n                } else {\r\n                    // An existing discussion has a new message, update the last message.\r\n                    discussion.message.message = data.message;\r\n                    discussion.message.timecreated = data.timecreated;\r\n                }\r\n            }\r\n        }, this.siteId);\r\n\r\n        // Update discussions when a message is read.\r\n        this.readChangedObserver = eventsProvider.on(AddonMessagesProvider.READ_CHANGED_EVENT, (data) => {\r\n            if (data.userId) {\r\n                const discussion = this.discussions.find((disc) => {\r\n                    return disc.message.user == data.userId;\r\n                });\r\n\r\n                if (typeof discussion != 'undefined') {\r\n                    // A discussion has been read reset counter.\r\n                    discussion.unread = false;\r\n\r\n                    // Discussions changed, invalidate them.\r\n                    this.messagesProvider.invalidateDiscussionsCache();\r\n                }\r\n            }\r\n        }, this.siteId);\r\n\r\n        // Update discussions when cron read is executed.\r\n        this.cronObserver = eventsProvider.on(AddonMessagesProvider.READ_CRON_EVENT, (data) => {\r\n            this.refreshData();\r\n        }, this.siteId);\r\n\r\n        // Refresh the view when the app is resumed.\r\n        this.appResumeSubscription = platform.resume.subscribe(() => {\r\n            if (!this.loaded) {\r\n                return;\r\n            }\r\n            this.loaded = false;\r\n            this.refreshData();\r\n        });\r\n\r\n        this.discussionUserId = navParams.get('discussionUserId') || false;\r\n\r\n        // If a message push notification is received, refresh the view.\r\n        this.pushObserver = pushNotificationsDelegate.on('receive').subscribe((notification) => {\r\n            // New message received. If it's from current site, refresh the data.\r\n            if (utils.isFalseOrZero(notification.notif) && notification.site == this.siteId) {\r\n                this.refreshData();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Component loaded.\r\n     */\r\n    ngOnInit(): void {\r\n        if (this.discussionUserId) {\r\n            // There is a discussion to load, open the discussion in a new state.\r\n            this.gotoDiscussion(this.discussionUserId);\r\n        }\r\n\r\n        this.fetchData().then(() => {\r\n            if (!this.discussionUserId && this.discussions.length > 0) {\r\n                // Take first and load it.\r\n                this.gotoDiscussion(this.discussions[0].message.user, undefined, true);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Refresh the data.\r\n     *\r\n     * @param {any} [refresher] Refresher.\r\n     * @return {Promise<any>} Promise resolved when done.\r\n     */\r\n    refreshData(refresher?: any): Promise<any> {\r\n        return this.messagesProvider.invalidateDiscussionsCache().then(() => {\r\n            return this.fetchData().finally(() => {\r\n                if (refresher) {\r\n                    // Actions to take if refresh comes from the user.\r\n                    this.eventsProvider.trigger(AddonMessagesProvider.READ_CHANGED_EVENT, undefined, this.siteId);\r\n                    refresher.complete();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fetch discussions.\r\n     *\r\n     * @return {Promise<any>} Promise resolved when done.\r\n     */\r\n    protected fetchData(): Promise<any> {\r\n        this.loadingMessage = this.loadingMessages;\r\n        this.search.enabled = this.messagesProvider.isSearchMessagesEnabled();\r\n\r\n        return this.messagesProvider.getDiscussions().then((discussions) => {\r\n            // Convert to an array for sorting.\r\n            const discussionsSorted = [];\r\n            for (const userId in discussions) {\r\n                discussions[userId].unread = !!discussions[userId].unread;\r\n                discussionsSorted.push(discussions[userId]);\r\n            }\r\n\r\n            this.discussions = discussionsSorted.sort((a, b) => {\r\n                return b.message.timecreated - a.message.timecreated;\r\n            });\r\n        }).catch((error) => {\r\n            this.domUtils.showErrorModalDefault(error, 'addon.messages.errorwhileretrievingdiscussions', true);\r\n        }).finally(() => {\r\n            this.loaded = true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Clear search and show discussions again.\r\n     */\r\n    clearSearch(): void {\r\n        this.loaded = false;\r\n        this.search.showResults = false;\r\n        this.search.text = ''; // Reset searched string.\r\n        this.fetchData().finally(() => {\r\n            this.loaded = true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Search messages cotaining text.\r\n     *\r\n     * @param  {string}       query Text to search for.\r\n     * @return {Promise<any>}       Resolved when done.\r\n     */\r\n    searchMessage(query: string): Promise<any> {\r\n        this.appProvider.closeKeyboard();\r\n        this.loaded = false;\r\n        this.loadingMessage = this.search.loading;\r\n\r\n        return this.messagesProvider.searchMessages(query).then((searchResults) => {\r\n            this.search.showResults = true;\r\n            this.search.results = searchResults;\r\n        }).catch((error) => {\r\n            this.domUtils.showErrorModalDefault(error, 'addon.messages.errorwhileretrievingmessages', true);\r\n        }).finally(() => {\r\n            this.loaded = true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Navigate to a particular discussion.\r\n     *\r\n     * @param {number} discussionUserId Discussion Id to load.\r\n     * @param {number} [messageId]      Message to scroll after loading the discussion. Used when searching.\r\n     * @param {boolean} [onlyWithSplitView=false]  Only go to Discussion if split view is on.\r\n     */\r\n    gotoDiscussion(discussionUserId: number, messageId?: number, onlyWithSplitView: boolean = false): void {\r\n        this.discussionUserId = discussionUserId;\r\n\r\n        const params = {\r\n            discussion: discussionUserId,\r\n            onlyWithSplitView: onlyWithSplitView\r\n        };\r\n        if (messageId) {\r\n            params['message'] = messageId;\r\n        }\r\n        this.eventsProvider.trigger(AddonMessagesProvider.SPLIT_VIEW_LOAD_EVENT, params, this.siteId);\r\n    }\r\n\r\n    /**\r\n     * Component destroyed.\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.newMessagesObserver && this.newMessagesObserver.off();\r\n        this.readChangedObserver && this.readChangedObserver.off();\r\n        this.cronObserver && this.cronObserver.off();\r\n        this.appResumeSubscription && this.appResumeSubscription.unsubscribe();\r\n        this.pushObserver && this.pushObserver.unsubscribe();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messages/components/discussions/discussions.ts","// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component } from '@angular/core';\r\nimport { NavParams } from 'ionic-angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CoreSitesProvider } from '@providers/sites';\r\nimport { AddonMessagesProvider } from '../../providers/messages';\r\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\r\nimport { CoreAppProvider } from '@providers/app';\r\nimport { CoreEventsProvider } from '@providers/events';\r\n\r\n/**\r\n * Component that displays the list of contacts.\r\n */\r\n@Component({\r\n    selector: 'addon-messages-contacts',\r\n    templateUrl: 'addon-messages-contacts.html',\r\n})\r\nexport class AddonMessagesContactsComponent {\r\n\r\n    protected currentUserId: number;\r\n    protected searchingMessages: string;\r\n    protected loadingMessages: string;\r\n    protected siteId: string;\r\n    protected noSearchTypes = ['online', 'offline', 'blocked', 'strangers'];\r\n\r\n    loaded = false;\r\n    discussionUserId: number;\r\n    contactTypes = this.noSearchTypes;\r\n    searchType = 'search';\r\n    loadingMessage = '';\r\n    hasContacts = false;\r\n    contacts = {\r\n        search: []\r\n    };\r\n    searchString = '';\r\n\r\n    constructor(sitesProvider: CoreSitesProvider, translate: TranslateService, private appProvider: CoreAppProvider,\r\n            private messagesProvider: AddonMessagesProvider, private domUtils: CoreDomUtilsProvider, navParams: NavParams,\r\n            private eventsProvider: CoreEventsProvider) {\r\n\r\n        this.currentUserId = sitesProvider.getCurrentSiteUserId();\r\n        this.siteId = sitesProvider.getCurrentSiteId();\r\n        this.searchingMessages = translate.instant('core.searching');\r\n        this.loadingMessages = translate.instant('core.loading');\r\n        this.loadingMessage = this.loadingMessages;\r\n\r\n        this.discussionUserId = navParams.get('discussionUserId') || false;\r\n    }\r\n\r\n    /**\r\n     * Component loaded.\r\n     */\r\n    ngOnInit(): void {\r\n        if (this.discussionUserId) {\r\n            // There is a discussion to load, open the discussion in a new state.\r\n            this.gotoDiscussion(this.discussionUserId);\r\n        }\r\n\r\n        this.fetchData().then(() => {\r\n            if (!this.discussionUserId && this.hasContacts) {\r\n                let contact;\r\n                for (const x in this.contacts) {\r\n                    if (this.contacts[x].length > 0) {\r\n                        contact = this.contacts[x][0];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (contact) {\r\n                    // Take first and load it.\r\n                    this.gotoDiscussion(contact.id, true);\r\n                }\r\n            }\r\n        }).finally(() => {\r\n            this.loaded = true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Refresh the data.\r\n     *\r\n     * @param {any} [refresher] Refresher.\r\n     * @return {Promise<any>} Promise resolved when done.\r\n     */\r\n    refreshData(refresher?: any): Promise<any> {\r\n        let promise;\r\n\r\n        if (this.searchString) {\r\n            // User has searched, update the search.\r\n            promise = this.performSearch(this.searchString);\r\n        } else {\r\n            // Update contacts.\r\n            promise = this.messagesProvider.invalidateAllContactsCache(this.currentUserId).then(() => {\r\n                return this.fetchData();\r\n            });\r\n        }\r\n\r\n        return promise.finally(() => {\r\n            refresher.complete();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fetch contacts.\r\n     *\r\n     * @return {Promise<any>} Promise resolved when done.\r\n     */\r\n    protected fetchData(): Promise<any> {\r\n        this.loadingMessage = this.loadingMessages;\r\n\r\n        return this.messagesProvider.getAllContacts().then((contacts) => {\r\n            for (const x in contacts) {\r\n                if (contacts[x].length > 0) {\r\n                    this.contacts[x] = this.sortUsers(contacts[x]);\r\n                } else {\r\n                    this.contacts[x] = [];\r\n                }\r\n            }\r\n\r\n            this.clearSearch();\r\n        }).catch((error) => {\r\n            this.domUtils.showErrorModalDefault(error, 'addon.messages.errorwhileretrievingcontacts', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sort user list by fullname\r\n     * @param  {any[]} list List to sort.\r\n     * @return {any[]}      Sorted list.\r\n     */\r\n    protected sortUsers(list: any[]): any[] {\r\n        return list.sort((a, b) => {\r\n            const compareA = a.fullname.toLowerCase(),\r\n                compareB = b.fullname.toLowerCase();\r\n\r\n            return compareA.localeCompare(compareB);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Clear search and show all contacts again.\r\n     */\r\n    clearSearch(): void {\r\n        this.searchString = ''; // Reset searched string.\r\n        this.contactTypes = this.noSearchTypes;\r\n\r\n        this.hasContacts = false;\r\n        for (const x in this.contacts) {\r\n            if (this.contacts[x].length > 0) {\r\n                this.hasContacts = true;\r\n\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Search users from the UI.\r\n     *\r\n     * @param  {string}       query Text to search for.\r\n     * @return {Promise<any>}       Resolved when done.\r\n     */\r\n    search(query: string): Promise<any> {\r\n        this.appProvider.closeKeyboard();\r\n\r\n        this.loaded = false;\r\n        this.loadingMessage = this.searchingMessages;\r\n\r\n        return this.performSearch(query).finally(() => {\r\n            this.loaded = true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Perform the search of users.\r\n     *\r\n     * @param  {string}       query Text to search for.\r\n     * @return {Promise<any>}       Resolved when done.\r\n     */\r\n    protected performSearch(query: string): Promise<any> {\r\n        return this.messagesProvider.searchContacts(query).then((result) => {\r\n            this.hasContacts = result.length > 0;\r\n            this.searchString = query;\r\n            this.contactTypes = ['search'];\r\n\r\n            this.contacts['search'] = this.sortUsers(result);\r\n        }).catch((error) => {\r\n            this.domUtils.showErrorModalDefault(error, 'addon.messages.errorwhileretrievingcontacts', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Navigate to a particular discussion.\r\n     *\r\n     * @param {number} discussionUserId Discussion Id to load.\r\n     * @param {boolean} [onlyWithSplitView=false]  Only go to Discussion if split view is on.\r\n     */\r\n    gotoDiscussion(discussionUserId: number, onlyWithSplitView: boolean = false): void {\r\n        this.discussionUserId = discussionUserId;\r\n\r\n        const params = {\r\n            discussion: discussionUserId,\r\n            onlyWithSplitView: onlyWithSplitView\r\n        };\r\n        this.eventsProvider.trigger(AddonMessagesProvider.SPLIT_VIEW_LOAD_EVENT, params, this.siteId);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messages/components/contacts/contacts.ts","// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, OnDestroy, ViewChild } from '@angular/core';\r\nimport { IonicPage } from 'ionic-angular';\r\nimport { CoreEventsProvider } from '@providers/events';\r\nimport { CoreSitesProvider } from '@providers/sites';\r\nimport { AddonMessagesProvider } from '../../providers/messages';\r\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\r\nimport { CoreTabsComponent } from '@components/tabs/tabs';\r\n\r\n/**\r\n * Page that displays the messages index page.\r\n */\r\n@IonicPage({ segment: 'addon-messages-index' })\r\n@Component({\r\n    selector: 'page-addon-messages-index',\r\n    templateUrl: 'index.html',\r\n})\r\nexport class AddonMessagesIndexPage implements OnDestroy {\r\n    @ViewChild(CoreSplitViewComponent) splitviewCtrl: CoreSplitViewComponent;\r\n    @ViewChild(CoreTabsComponent) tabsComponent: CoreTabsComponent;\r\n\r\n    protected loadSplitViewObserver: any;\r\n    protected siteId: string;\r\n\r\n    constructor(eventsProvider: CoreEventsProvider, sitesProvider: CoreSitesProvider) {\r\n\r\n        this.siteId = sitesProvider.getCurrentSiteId();\r\n\r\n        // Update split view or navigate.\r\n        this.loadSplitViewObserver = eventsProvider.on(AddonMessagesProvider.SPLIT_VIEW_LOAD_EVENT, (data) => {\r\n            if (data.discussion && (this.splitviewCtrl.isOn() || !data.onlyWithSplitView)) {\r\n                this.gotoDiscussion(data.discussion, data.message);\r\n            }\r\n        }, this.siteId);\r\n    }\r\n\r\n    /**\r\n     * Navigate to a particular discussion.\r\n     *\r\n     * @param {number} discussionUserId Discussion Id to load.\r\n     * @param {number} [messageId]      Message to scroll after loading the discussion. Used when searching.\r\n     */\r\n    gotoDiscussion(discussionUserId: number, messageId?: number): void {\r\n        const params = {\r\n            userId: discussionUserId\r\n        };\r\n        if (messageId) {\r\n            params['message'] = messageId;\r\n        }\r\n        this.splitviewCtrl.push('AddonMessagesDiscussionPage', params);\r\n    }\r\n\r\n    /**\r\n     * User entered the page.\r\n     */\r\n    ionViewDidEnter(): void {\r\n        this.tabsComponent && this.tabsComponent.ionViewDidEnter();\r\n    }\r\n\r\n    /**\r\n     * User left the page.\r\n     */\r\n    ionViewDidLeave(): void {\r\n        this.tabsComponent && this.tabsComponent.ionViewDidLeave();\r\n    }\r\n\r\n    /**\r\n     * Page destroyed.\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.loadSplitViewObserver && this.loadSplitViewObserver.off();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messages/pages/index/index.ts"],"sourceRoot":""}