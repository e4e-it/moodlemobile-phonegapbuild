{"version":3,"sources":["../../src/addon/mod/glossary/pages/edit/edit.module.ts","../../src/addon/mod/glossary/pages/edit/edit.ts"],"names":[],"mappings":"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","file":"78.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { CoreComponentsModule } from '@components/components.module';\r\nimport { CoreDirectivesModule } from '@directives/directives.module';\r\nimport { AddonModGlossaryEditPage } from './edit';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AddonModGlossaryEditPage,\r\n    ],\r\n    imports: [\r\n        CoreComponentsModule,\r\n        CoreDirectivesModule,\r\n        IonicPageModule.forChild(AddonModGlossaryEditPage),\r\n        TranslateModule.forChild()\r\n    ],\r\n})\r\nexport class AddonModGlossaryNewDiscussionPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/glossary/pages/edit/edit.module.ts","// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CoreEventsProvider } from '@providers/events';\r\nimport { CoreSitesProvider } from '@providers/sites';\r\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\r\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\r\nimport { CoreFileUploaderProvider } from '@core/fileuploader/providers/fileuploader';\r\nimport { AddonModGlossaryProvider } from '../../providers/glossary';\r\nimport { AddonModGlossaryOfflineProvider } from '../../providers/offline';\r\nimport { AddonModGlossaryHelperProvider } from '../../providers/helper';\r\n\r\n/**\r\n * Page that displays the edit form.\r\n */\r\n@IonicPage({ segment: 'addon-mod-glossary-edit' })\r\n@Component({\r\n    selector: 'page-addon-mod-glossary-edit',\r\n    templateUrl: 'edit.html',\r\n})\r\nexport class AddonModGlossaryEditPage implements OnInit {\r\n    component = AddonModGlossaryProvider.COMPONENT;\r\n    loaded = false;\r\n    entry = {\r\n        concept: '',\r\n        definition: '',\r\n        timecreated: 0,\r\n    };\r\n    options = {\r\n        categories: [],\r\n        aliases: '',\r\n        usedynalink: false,\r\n        casesensitive: false,\r\n        fullmatch: false\r\n    };\r\n    attachments = [];\r\n    definitionControl = new FormControl();\r\n    categories = [];\r\n\r\n    protected courseId: number;\r\n    protected module: any;\r\n    protected glossary: any;\r\n    protected syncId: string;\r\n    protected syncObserver: any;\r\n    protected isDestroyed = false;\r\n    protected originalData: any;\r\n    protected saved = false;\r\n\r\n    constructor(private navParams: NavParams,\r\n            private navCtrl: NavController,\r\n            private translate: TranslateService,\r\n            private domUtils: CoreDomUtilsProvider,\r\n            private eventsProvider: CoreEventsProvider,\r\n            private sitesProvider: CoreSitesProvider,\r\n            private uploaderProvider: CoreFileUploaderProvider,\r\n            private textUtils: CoreTextUtilsProvider,\r\n            private glossaryProvider: AddonModGlossaryProvider,\r\n            private glossaryOffline: AddonModGlossaryOfflineProvider,\r\n            private glossaryHelper: AddonModGlossaryHelperProvider) {\r\n        this.courseId = navParams.get('courseId');\r\n        this.module = navParams.get('module');\r\n        this.glossary = navParams.get('glossary');\r\n    }\r\n\r\n    /**\r\n     * Component being initialized.\r\n     */\r\n    ngOnInit(): void {\r\n        const entry = this.navParams.get('entry');\r\n\r\n        let promise;\r\n\r\n        if (entry) {\r\n            this.entry.concept = entry.concept || '';\r\n            this.entry.definition = entry.definition || '';\r\n\r\n            this.originalData = {\r\n                concept: this.entry.concept,\r\n                definition: this.entry.definition,\r\n                files: [],\r\n            };\r\n\r\n            if (entry.options) {\r\n                this.options.categories = entry.options.categories || [];\r\n                this.options.aliases = entry.options.aliases || '';\r\n                this.options.usedynalink = !!entry.options.usedynalink;\r\n                if (this.options.usedynalink) {\r\n                    this.options.casesensitive = !!entry.options.casesensitive;\r\n                    this.options.fullmatch = !!entry.options.fullmatch;\r\n                }\r\n            }\r\n\r\n            // Treat offline attachments if any.\r\n            if (entry.attachments && entry.attachments.offline) {\r\n                promise = this.glossaryHelper.getStoredFiles(this.glossary.id, entry.concept, entry.timecreated).then((files) => {\r\n                    this.attachments = files;\r\n                    this.originalData.files = files.slice();\r\n                });\r\n            }\r\n        }\r\n\r\n        this.definitionControl.setValue(this.entry.definition);\r\n\r\n        Promise.resolve(promise).then(() => {\r\n            this.glossaryProvider.getAllCategories(this.glossary.id).then((categories) => {\r\n                this.categories = categories;\r\n            }).finally(() => {\r\n                this.loaded = true;\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Definition changed.\r\n     *\r\n     * @param {string} text The new text.\r\n     */\r\n    onDefinitionChange(text: string): void {\r\n        this.entry.definition = text;\r\n    }\r\n\r\n    /**\r\n     * Check if we can leave the page or not.\r\n     *\r\n     * @return {boolean|Promise<void>} Resolved if we can leave it, rejected if not.\r\n     */\r\n    ionViewCanLeave(): boolean | Promise<void> {\r\n        let promise: any;\r\n\r\n        if (!this.saved && this.glossaryHelper.hasEntryDataChanged(this.entry, this.attachments, this.originalData)) {\r\n            // Show confirmation if some data has been modified.\r\n            promise = this.domUtils.showConfirm(this.translate.instant('core.confirmcanceledit'));\r\n        } else {\r\n            promise = Promise.resolve();\r\n        }\r\n\r\n        return promise.then(() => {\r\n            // Delete the local files from the tmp folder.\r\n            this.uploaderProvider.clearTmpFiles(this.attachments);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Save the entry.\r\n     */\r\n    save(): void {\r\n        let definition = this.entry.definition,\r\n            saveOffline = false,\r\n            promise;\r\n        const timecreated = this.entry.timecreated || Date.now();\r\n\r\n        if (!this.entry.concept || !definition) {\r\n            this.domUtils.showErrorModal('addon.mod_glossary.fillfields', true);\r\n\r\n            return;\r\n        }\r\n\r\n        const modal = this.domUtils.showModalLoading('core.sending', true);\r\n\r\n        // Add some HTML to the definition if needed.\r\n        definition = this.textUtils.formatHtmlLines(definition);\r\n\r\n        // Upload attachments first if any.\r\n        if (this.attachments.length > 0) {\r\n            promise = this.glossaryHelper.uploadOrStoreFiles(this.glossary.id, this.entry.concept, timecreated, this.attachments,\r\n                    false).catch(() => {\r\n                // Cannot upload them in online, save them in offline.\r\n                saveOffline = true;\r\n\r\n                return this.glossaryHelper.uploadOrStoreFiles(this.glossary.id, this.entry.concept, timecreated,\r\n                        this.attachments, true);\r\n            });\r\n        } else {\r\n            promise = Promise.resolve();\r\n        }\r\n\r\n        promise.then((attach) => {\r\n            const options: any = {\r\n                aliases: this.options.aliases,\r\n                categories: this.options.categories.join(',')\r\n            };\r\n\r\n            if (this.glossary.usedynalink) {\r\n                options.usedynalink = this.options.usedynalink ? 1 : 0;\r\n                if (this.options.usedynalink) {\r\n                    options.casesensitive = this.options.casesensitive ? 1 : 0;\r\n                    options.fullmatch = this.options.fullmatch ? 1 : 0;\r\n                }\r\n            }\r\n\r\n            if (saveOffline) {\r\n                let promise;\r\n                if (this.entry && !this.glossary.allowduplicatedentries) {\r\n                    // Check if the entry is duplicated in online or offline mode.\r\n                    promise = this.glossaryProvider.isConceptUsed(this.glossary.id, this.entry.concept, this.entry.timecreated)\r\n                        .then((used) => {\r\n                            if (used) {\r\n                                // There's a entry with same name, reject with error message.\r\n                                return Promise.reject(this.translate.instant('addon.mod_glossary.errconceptalreadyexists'));\r\n                            }\r\n                        });\r\n                } else {\r\n                    promise = Promise.resolve();\r\n                }\r\n\r\n                return promise.then(() => {\r\n                    // Save entry in offline.\r\n                    return this.glossaryOffline.addNewEntry(this.glossary.id, this.entry.concept, definition, this.courseId,\r\n                            options, attach, timecreated, undefined, undefined, this.entry).then(() => {\r\n                        // Don't return anything.\r\n                    });\r\n                });\r\n            } else {\r\n                // Try to send it to server.\r\n                // Don't allow offline if there are attachments since they were uploaded fine.\r\n                return this.glossaryProvider.addEntry(this.glossary.id, this.entry.concept, definition, this.courseId, options,\r\n                    attach, timecreated, undefined, this.entry, !this.attachments.length, !this.glossary.allowduplicatedentries);\r\n            }\r\n        }).then((entryId) => {\r\n            if (entryId) {\r\n                // Data sent to server, delete stored files (if any).\r\n                this.glossaryHelper.deleteStoredFiles(this.glossary.id, this.entry.concept, timecreated);\r\n            }\r\n\r\n            const data = {\r\n                glossaryId: this.glossary.id,\r\n            };\r\n            this.eventsProvider.trigger(AddonModGlossaryProvider.ADD_ENTRY_EVENT, data, this.sitesProvider.getCurrentSiteId());\r\n\r\n            this.saved = true;\r\n            this.navCtrl.pop();\r\n        }).catch((error) => {\r\n            this.domUtils.showErrorModalDefault(error, 'addon.mod_glossary.cannoteditentry', true);\r\n        }).finally(() => {\r\n            modal.dismiss();\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/glossary/pages/edit/edit.ts"],"sourceRoot":""}