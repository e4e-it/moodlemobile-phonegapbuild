{"version":3,"sources":["../../src/addon/files/pages/list/list.module.ts","../../src/addon/files/pages/list/list.ts"],"names":[],"mappings":"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","file":"104.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { CoreComponentsModule } from '@components/components.module';\r\nimport { CoreDirectivesModule } from '@directives/directives.module';\r\nimport { AddonFilesListPage } from './list';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AddonFilesListPage,\r\n    ],\r\n    imports: [\r\n        CoreComponentsModule,\r\n        CoreDirectivesModule,\r\n        IonicPageModule.forChild(AddonFilesListPage),\r\n        TranslateModule.forChild()\r\n    ],\r\n})\r\nexport class AddonFilesListPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/files/pages/list/list.module.ts","// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, OnDestroy } from '@angular/core';\r\nimport { IonicPage, NavParams } from 'ionic-angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CoreAppProvider } from '@providers/app';\r\nimport { CoreEventsProvider } from '@providers/events';\r\nimport { CoreSitesProvider } from '@providers/sites';\r\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\r\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\r\nimport { AddonFilesProvider } from '../../providers/files';\r\nimport { AddonFilesHelperProvider } from '../../providers/helper';\r\n\r\n/**\r\n * Page that displays the list of files.\r\n */\r\n@IonicPage({ segment: 'addon-files-list' })\r\n@Component({\r\n    selector: 'page-addon-files-list',\r\n    templateUrl: 'list.html',\r\n})\r\nexport class AddonFilesListPage implements OnDestroy {\r\n\r\n    title: string; // Page title.\r\n    showPrivateFiles: boolean; // Whether the user can view private files.\r\n    showSiteFiles: boolean; // Whether the user can view site files.\r\n    showUpload: boolean; // Whether the user can upload files.\r\n    root: string; // The root of the files loaded: 'my' or 'site'.\r\n    path: string; // The path of the directory being loaded. If empty path it means the root is being loaded.\r\n    userQuota: number; // The user quota (in bytes).\r\n    filesInfo: any; // Info about private files (size, number of files, etc.).\r\n    spaceUsed: string; // Space used in a readable format.\r\n    userQuotaReadable: string; // User quota in a readable format.\r\n    files: any[]; // List of files.\r\n    component: string; // Component to link the file downloads to.\r\n    filesLoaded: boolean; // Whether the files are loaded.\r\n\r\n    protected updateSiteObserver;\r\n\r\n    constructor(navParams: NavParams, eventsProvider: CoreEventsProvider, private sitesProvider: CoreSitesProvider,\r\n            private domUtils: CoreDomUtilsProvider, private translate: TranslateService, private appProvider: CoreAppProvider,\r\n            private filesProvider: AddonFilesProvider, private filesHelper: AddonFilesHelperProvider,\r\n            private textUtils: CoreTextUtilsProvider) {\r\n        this.title = navParams.get('title') || this.translate.instant('addon.files.files');\r\n        this.root = navParams.get('root');\r\n        this.path = navParams.get('path');\r\n\r\n        // Update visibility if current site info is updated.\r\n        this.updateSiteObserver = eventsProvider.on(CoreEventsProvider.SITE_UPDATED, () => {\r\n            this.setVisibility();\r\n        }, sitesProvider.getCurrentSiteId());\r\n    }\r\n\r\n    /**\r\n     * View loaded.\r\n     */\r\n    ionViewDidLoad(): void {\r\n        this.setVisibility();\r\n        this.userQuota = this.sitesProvider.getCurrentSite().getInfo().userquota;\r\n\r\n        if (!this.root) {\r\n            // Load private files by default.\r\n            if (this.showPrivateFiles) {\r\n                this.root = 'my';\r\n            } else if (this.showSiteFiles) {\r\n                this.root = 'site';\r\n            }\r\n        }\r\n\r\n        if (this.root) {\r\n            this.rootChanged();\r\n        } else {\r\n            this.filesLoaded = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refresh the data.\r\n     *\r\n     * @param {any} refresher Refresher.\r\n     */\r\n    refreshData(refresher: any): void {\r\n        this.refreshFiles().finally(() => {\r\n            refresher.complete();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Function called when the root has changed.\r\n     */\r\n    rootChanged(): void {\r\n        this.filesLoaded = false;\r\n        this.component = this.root == 'my' ? AddonFilesProvider.PRIVATE_FILES_COMPONENT : AddonFilesProvider.SITE_FILES_COMPONENT;\r\n\r\n        this.fetchFiles().finally(() => {\r\n            this.filesLoaded = true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Upload a new file.\r\n     */\r\n    uploadFile(): void {\r\n        this.filesProvider.versionCanUploadFiles().then((canUpload) => {\r\n            if (!canUpload) {\r\n                this.domUtils.showAlertTranslated('core.notice', 'addon.files.erroruploadnotworking');\r\n            } else if (!this.appProvider.isOnline()) {\r\n                this.domUtils.showErrorModal('core.fileuploader.errormustbeonlinetoupload', true);\r\n            } else {\r\n                this.filesHelper.uploadPrivateFile(this.filesInfo).then(() => {\r\n                    // File uploaded, refresh the list.\r\n                    this.filesLoaded = false;\r\n                    this.refreshFiles().finally(() => {\r\n                        this.filesLoaded = true;\r\n                    });\r\n                }).catch(() => {\r\n                    // Ignore errors, they're handled inside the function.\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set visibility of some items based on site data.\r\n     */\r\n    protected setVisibility(): void {\r\n        this.showPrivateFiles = this.filesProvider.canViewPrivateFiles();\r\n        this.showSiteFiles = this.filesProvider.canViewSiteFiles();\r\n        this.showUpload = this.filesProvider.canUploadFiles();\r\n    }\r\n\r\n    /**\r\n     * Fetch the files.\r\n     *\r\n     * @return {Promise<any>} Promise resolved when done.\r\n     */\r\n    protected fetchFiles(): Promise<any> {\r\n        let promise;\r\n\r\n        if (!this.path) {\r\n            // The path is unknown, the user must be requesting a root.\r\n            if (this.root == 'site') {\r\n                this.title = this.translate.instant('addon.files.sitefiles');\r\n                promise = this.filesProvider.getSiteFiles();\r\n            } else if (this.root == 'my') {\r\n                this.title = this.translate.instant('addon.files.files');\r\n\r\n                promise = this.filesProvider.getPrivateFiles().then((files) => {\r\n                    if (this.showUpload && this.filesProvider.canGetPrivateFilesInfo() && this.userQuota > 0) {\r\n                        // Get the info to calculate the available size.\r\n                        return this.filesProvider.getPrivateFilesInfo().then((info) => {\r\n                            this.filesInfo = info;\r\n                            this.spaceUsed = this.textUtils.bytesToSize(info.filesizewithoutreferences, 1);\r\n                            this.userQuotaReadable = this.textUtils.bytesToSize(this.userQuota, 1);\r\n\r\n                            return files;\r\n                        });\r\n                    } else {\r\n                        // User quota isn't useful, delete it.\r\n                        delete this.userQuota;\r\n                    }\r\n\r\n                    return files;\r\n                });\r\n            } else {\r\n                // Unknown root.\r\n                promise = Promise.reject(null);\r\n            }\r\n        } else {\r\n            // Path is set, serve the files the user requested.\r\n            promise = this.filesProvider.getFiles(this.path);\r\n        }\r\n\r\n        return promise.then((files) => {\r\n            this.files = files;\r\n        }).catch((error) => {\r\n            this.domUtils.showErrorModalDefault(error, 'addon.files.couldnotloadfiles', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Refresh the displayed files.\r\n     *\r\n     * @return {Promise<any>} Promise resolved when done.\r\n     */\r\n    protected refreshFiles(): Promise<any> {\r\n        const promises = [];\r\n\r\n        promises.push(this.filesProvider.invalidateDirectory(this.root, this.path));\r\n        promises.push(this.filesProvider.invalidatePrivateFilesInfoForUser());\r\n\r\n        return Promise.all(promises).finally(() => {\r\n            return this.fetchFiles();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Page destroyed.\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.updateSiteObserver && this.updateSiteObserver.off();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/files/pages/list/list.ts"],"sourceRoot":""}