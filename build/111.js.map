{"version":3,"sources":["../../src/addon/competency/pages/competencies/competencies.module.ts","../../src/addon/competency/pages/competencies/competencies.ts"],"names":[],"mappings":"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","file":"111.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { CoreComponentsModule } from '@components/components.module';\r\nimport { CoreDirectivesModule } from '@directives/directives.module';\r\nimport { AddonCompetencyCompetenciesPage } from './competencies';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AddonCompetencyCompetenciesPage,\r\n    ],\r\n    imports: [\r\n        CoreComponentsModule,\r\n        CoreDirectivesModule,\r\n        IonicPageModule.forChild(AddonCompetencyCompetenciesPage),\r\n        TranslateModule.forChild()\r\n    ],\r\n})\r\nexport class AddonCompetencyCompetenciesPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/competency/pages/competencies/competencies.module.ts","// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { IonicPage, NavParams } from 'ionic-angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\r\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\r\nimport { AddonCompetencyProvider } from '../../providers/competency';\r\n\r\n/**\r\n * Page that displays the list of competencies of a learning plan.\r\n */\r\n@IonicPage({ segment: 'addon-competency-competencies' })\r\n@Component({\r\n    selector: 'page-addon-competency-competencies',\r\n    templateUrl: 'competencies.html',\r\n})\r\nexport class AddonCompetencyCompetenciesPage {\r\n    @ViewChild(CoreSplitViewComponent) splitviewCtrl: CoreSplitViewComponent;\r\n\r\n    protected planId: number;\r\n    protected courseId: number;\r\n    protected competencyId: number;\r\n    protected userId: number;\r\n\r\n    competenciesLoaded = false;\r\n    competencies = [];\r\n    title: string;\r\n\r\n    constructor(navParams: NavParams, private translate: TranslateService, private domUtils: CoreDomUtilsProvider,\r\n            private competencyProvider: AddonCompetencyProvider) {\r\n        this.planId = navParams.get('planId');\r\n        this.courseId = navParams.get('courseId');\r\n        this.competencyId = navParams.get('competencyId');\r\n        this.userId = navParams.get('userId');\r\n    }\r\n\r\n    /**\r\n     * View loaded.\r\n     */\r\n    ionViewDidLoad(): void {\r\n        if (this.competencyId) {\r\n            // There is a competency to load.\r\n            this.openCompetency(this.competencyId);\r\n        }\r\n\r\n        this.fetchCompetencies().then(() => {\r\n            if (!this.competencyId && this.splitviewCtrl.isOn() && this.competencies.length > 0) {\r\n                // Take first and load it.\r\n                this.openCompetency(this.competencies[0].id);\r\n            }\r\n        }).finally(() => {\r\n            this.competenciesLoaded = true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fetches the competencies and updates the view.\r\n     *\r\n     * @return {Promise<void>} Promise resolved when done.\r\n     */\r\n    protected fetchCompetencies(): Promise<void> {\r\n        let promise;\r\n\r\n        if (this.planId) {\r\n            promise = this.competencyProvider.getLearningPlan(this.planId);\r\n        } else if (this.courseId) {\r\n            promise = this.competencyProvider.getCourseCompetencies(this.courseId, this.userId);\r\n        } else {\r\n            promise = Promise.reject(null);\r\n        }\r\n\r\n        return promise.then((response) => {\r\n            if (response.competencycount <= 0) {\r\n                return Promise.reject(this.translate.instant('addon.competency.errornocompetenciesfound'));\r\n            }\r\n\r\n            if (this.planId) {\r\n                this.title = response.plan.name;\r\n                this.userId = response.plan.userid;\r\n            } else {\r\n                this.title = this.translate.instant('addon.competency.coursecompetencies');\r\n            }\r\n            this.competencies = response.competencies;\r\n        }).catch((message) => {\r\n            this.domUtils.showErrorModalDefault(message, 'Error getting competencies data.');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Opens a competency.\r\n     *\r\n     * @param {number} competencyId\r\n     */\r\n    openCompetency(competencyId: number): void {\r\n        this.competencyId = competencyId;\r\n        let params;\r\n        if (this.planId) {\r\n            params = {competencyId, planId: this.planId};\r\n        } else {\r\n            params = {competencyId, courseId: this.courseId, userId: this.userId};\r\n        }\r\n        this.splitviewCtrl.push('AddonCompetencyCompetencyPage', params);\r\n    }\r\n\r\n    /**\r\n     * Refreshes the competencies.\r\n     *\r\n     * @param {any} refresher Refresher.\r\n     */\r\n    refreshCompetencies(refresher: any): void {\r\n        let promise;\r\n        if (this.planId) {\r\n            promise = this.competencyProvider.invalidateLearningPlan(this.planId);\r\n        } else {\r\n            promise = this.competencyProvider.invalidateCourseCompetencies(this.courseId, this.userId);\r\n        }\r\n\r\n        return promise.finally(() => {\r\n            this.fetchCompetencies().finally(() => {\r\n                refresher.complete();\r\n            });\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/competency/pages/competencies/competencies.ts"],"sourceRoot":""}