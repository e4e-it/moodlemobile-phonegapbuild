{"version":3,"sources":["../../src/addon/mod/forum/pages/discussion/discussion.module.ts","../../src/addon/mod/forum/pages/discussion/discussion.ts"],"names":[],"mappings":"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","file":"81.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { CoreComponentsModule } from '@components/components.module';\r\nimport { CoreDirectivesModule } from '@directives/directives.module';\r\nimport { AddonModForumComponentsModule } from '../../components/components.module';\r\nimport { AddonModForumDiscussionPage } from './discussion';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AddonModForumDiscussionPage,\r\n    ],\r\n    imports: [\r\n        CoreComponentsModule,\r\n        CoreDirectivesModule,\r\n        AddonModForumComponentsModule,\r\n        IonicPageModule.forChild(AddonModForumDiscussionPage),\r\n        TranslateModule.forChild()\r\n    ],\r\n})\r\nexport class AddonModForumDiscussionPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/forum/pages/discussion/discussion.module.ts","// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, Optional, OnDestroy, ViewChild, NgZone } from '@angular/core';\r\nimport { IonicPage, NavParams, Content } from 'ionic-angular';\r\nimport { Network } from '@ionic-native/network';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CoreAppProvider } from '@providers/app';\r\nimport { CoreEventsProvider } from '@providers/events';\r\nimport { CoreSitesProvider } from '@providers/sites';\r\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\r\nimport { CoreUtilsProvider } from '@providers/utils/utils';\r\nimport { CoreFileUploaderProvider } from '@core/fileuploader/providers/fileuploader';\r\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\r\nimport { AddonModForumProvider } from '../../providers/forum';\r\nimport { AddonModForumOfflineProvider } from '../../providers/offline';\r\nimport { AddonModForumHelperProvider } from '../../providers/helper';\r\nimport { AddonModForumSyncProvider } from '../../providers/sync';\r\n\r\ntype SortType = 'flat-newest' | 'flat-oldest' | 'nested';\r\n\r\n/**\r\n * Page that displays a forum discussion.\r\n */\r\n@IonicPage({ segment: 'addon-mod-forum-discussion' })\r\n@Component({\r\n    selector: 'page-addon-mod-forum-discussion',\r\n    templateUrl: 'discussion.html',\r\n})\r\nexport class AddonModForumDiscussionPage implements OnDestroy {\r\n    @ViewChild(Content) content: Content;\r\n\r\n    courseId: number;\r\n    discussionId: number;\r\n    forum: any;\r\n    discussion: any;\r\n    posts: any[];\r\n    discussionLoaded = false;\r\n    defaultSubject: string;\r\n    isOnline: boolean;\r\n    isSplitViewOn: boolean;\r\n    locked: boolean;\r\n    postHasOffline: boolean;\r\n    sort: SortType = 'flat-oldest';\r\n    trackPosts: boolean;\r\n    replyData = {\r\n        replyingTo: 0,\r\n        isEditing: false,\r\n        subject: '',\r\n        message: null, // Null means empty or just white space.\r\n        files: [],\r\n    };\r\n    originalData = {\r\n        subject: null, // Null means original data is not set.\r\n        message: null, // Null means empty or just white space.\r\n        files: [],\r\n    };\r\n    refreshIcon = 'spinner';\r\n    syncIcon = 'spinner';\r\n    discussionStr = '';\r\n    component = AddonModForumProvider.COMPONENT;\r\n    cmId: number;\r\n\r\n    protected forumId: number;\r\n    protected onlineObserver: any;\r\n    protected syncObserver: any;\r\n    protected syncManualObserver: any;\r\n\r\n    constructor(navParams: NavParams,\r\n            network: Network,\r\n            zone: NgZone,\r\n            private appProvider: CoreAppProvider,\r\n            private eventsProvider: CoreEventsProvider,\r\n            private sitesProvider: CoreSitesProvider,\r\n            private domUtils: CoreDomUtilsProvider,\r\n            private utils: CoreUtilsProvider,\r\n            private translate: TranslateService,\r\n            private uploaderProvider: CoreFileUploaderProvider,\r\n            private forumProvider: AddonModForumProvider,\r\n            private forumOffline: AddonModForumOfflineProvider,\r\n            private forumHelper: AddonModForumHelperProvider,\r\n            private forumSync: AddonModForumSyncProvider,\r\n            @Optional() private svComponent: CoreSplitViewComponent) {\r\n        this.courseId = navParams.get('courseId');\r\n        this.cmId = navParams.get('cmId');\r\n        this.forumId = navParams.get('forumId');\r\n        this.discussionId = navParams.get('discussionId');\r\n        this.trackPosts = navParams.get('trackPosts');\r\n        this.locked = navParams.get('locked');\r\n\r\n        this.isOnline = this.appProvider.isOnline();\r\n        this.onlineObserver = network.onchange().subscribe((online) => {\r\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\r\n            zone.run(() => {\r\n                this.isOnline = this.appProvider.isOnline();\r\n            });\r\n        });\r\n        this.isSplitViewOn = this.svComponent && this.svComponent.isOn();\r\n\r\n        this.discussionStr = translate.instant('addon.mod_forum.discussion');\r\n    }\r\n\r\n    /**\r\n     * View loaded.\r\n     */\r\n    ionViewDidLoad(): void {\r\n        this.fetchPosts(true, false, true);\r\n    }\r\n\r\n    /**\r\n     * User entered the page that contains the component.\r\n     */\r\n    ionViewDidEnter(): void {\r\n        // Refresh data if this discussion is synchronized automatically.\r\n        this.syncObserver = this.eventsProvider.on(AddonModForumSyncProvider.AUTO_SYNCED, (data) => {\r\n            if (data.forumId == this.forumId && this.discussionId == data.discussionId\r\n                    && data.userId == this.sitesProvider.getCurrentSiteUserId()) {\r\n                // Refresh the data.\r\n                this.discussionLoaded = false;\r\n                this.refreshPosts();\r\n            }\r\n        }, this.sitesProvider.getCurrentSiteId());\r\n\r\n        // Refresh data if this forum discussion is synchronized from discussions list.\r\n        this.syncManualObserver = this.eventsProvider.on(AddonModForumSyncProvider.MANUAL_SYNCED, (data) => {\r\n            if (data.source != 'discussion' && data.forumId == this.forumId &&\r\n                    data.userId == this.sitesProvider.getCurrentSiteUserId()) {\r\n                // Refresh the data.\r\n                this.discussionLoaded = false;\r\n                this.refreshPosts();\r\n            }\r\n        }, this.sitesProvider.getCurrentSiteId());\r\n\r\n        // Trigger view event, to highlight the current opened discussion in the split view.\r\n        this.eventsProvider.trigger(AddonModForumProvider.VIEW_DISCUSSION_EVENT, {\r\n            forumId: this.forumId,\r\n            discussion: this.discussionId\r\n        }, this.sitesProvider.getCurrentSiteId());\r\n    }\r\n\r\n    /**\r\n     * Check if we can leave the page or not.\r\n     *\r\n     * @return {boolean|Promise<void>} Resolved if we can leave it, rejected if not.\r\n     */\r\n    ionViewCanLeave(): boolean | Promise<void> {\r\n        let promise: any;\r\n\r\n        if (this.forumHelper.hasPostDataChanged(this.replyData, this.originalData)) {\r\n            // Show confirmation if some data has been modified.\r\n            promise = this.domUtils.showConfirm(this.translate.instant('core.confirmcanceledit'));\r\n        } else {\r\n            promise = Promise.resolve();\r\n        }\r\n\r\n        return promise.then(() => {\r\n            // Delete the local files from the tmp folder.\r\n            this.uploaderProvider.clearTmpFiles(this.replyData.files);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Convenience function to get the forum.\r\n     *\r\n     * @return {Promise<any>} Promise resolved with the forum.\r\n     */\r\n    protected fetchForum(): Promise<any> {\r\n        if (this.courseId && this.cmId) {\r\n            return this.forumProvider.getForum(this.courseId, this.cmId);\r\n        } else if (this.courseId && this.forumId) {\r\n            return this.forumProvider.getForumById(this.courseId, this.forumId);\r\n        } else {\r\n            // Cannot get the forum.\r\n            return Promise.reject(null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convenience function to get forum discussions.\r\n     *\r\n     * @param  {boolean} [sync]            Whether to try to synchronize the discussion.\r\n     * @param  {boolean} [showErrors]      Whether to show errors in a modal.\r\n     * @param  {boolean} [forceMarkAsRead] Whether to mark all posts as read.\r\n     * @return {Promise<any>} Promise resolved when done.\r\n     */\r\n    protected fetchPosts(sync?: boolean, showErrors?: boolean, forceMarkAsRead?: boolean): Promise<any> {\r\n        let syncPromise;\r\n        if (sync) {\r\n            // Try to synchronize the forum.\r\n            syncPromise = this.syncDiscussion(showErrors).catch(() => {\r\n                // Ignore errors.\r\n            });\r\n        } else {\r\n            syncPromise = Promise.resolve();\r\n        }\r\n\r\n        let onlinePosts = [];\r\n        const offlineReplies = [];\r\n        let hasUnreadPosts = false;\r\n\r\n        return syncPromise.then(() => {\r\n            return this.forumProvider.getDiscussionPosts(this.discussionId).then((posts) => {\r\n                onlinePosts = posts;\r\n\r\n            }).then(() => {\r\n                // Check if there are responses stored in offline.\r\n                return this.forumOffline.getDiscussionReplies(this.discussionId).then((replies) => {\r\n                    this.postHasOffline = !!replies.length;\r\n                    const convertPromises = [];\r\n\r\n                    // Index posts to allow quick access. Also check unread field.\r\n                    const posts = {};\r\n                    onlinePosts.forEach((post) => {\r\n                        posts[post.id] = post;\r\n                        hasUnreadPosts = hasUnreadPosts || !post.postread;\r\n                    });\r\n\r\n                    replies.forEach((offlineReply) => {\r\n                        // If we don't have forumId and courseId, get it from the post.\r\n                        if (!this.forumId) {\r\n                            this.forumId = offlineReply.forumid;\r\n                        }\r\n                        if (!this.courseId) {\r\n                            this.courseId = offlineReply.courseid;\r\n                        }\r\n\r\n                        convertPromises.push(this.forumHelper.convertOfflineReplyToOnline(offlineReply).then((reply) => {\r\n                            offlineReplies.push(reply);\r\n\r\n                            // Disable reply of the parent. Reply in offline to the same post is not allowed, edit instead.\r\n                            posts[reply.parent].canreply = false;\r\n                        }));\r\n                    });\r\n\r\n                    return Promise.all(convertPromises).then(() => {\r\n                        // Convert back to array.\r\n                        onlinePosts = this.utils.objectToArray(posts);\r\n                    });\r\n                });\r\n            });\r\n        }).then(() => {\r\n            const posts = offlineReplies.concat(onlinePosts);\r\n            this.discussion = this.forumProvider.extractStartingPost(posts);\r\n\r\n            // If sort type is nested, normal sorting is disabled and nested posts will be displayed.\r\n            if (this.sort == 'nested') {\r\n                // Sort first by creation date to make format tree work.\r\n                this.forumProvider.sortDiscussionPosts(posts, 'ASC');\r\n                this.posts = this.utils.formatTree(posts, 'parent', 'id', this.discussion.id);\r\n            } else {\r\n                // Set default reply subject.\r\n                const direction = this.sort == 'flat-newest' ? 'DESC' : 'ASC';\r\n                this.forumProvider.sortDiscussionPosts(posts, direction);\r\n                this.posts = posts;\r\n            }\r\n            this.defaultSubject = this.translate.instant('addon.mod_forum.re') + ' ' + this.discussion.subject;\r\n            this.replyData.subject = this.defaultSubject;\r\n\r\n            // Now try to get the forum.\r\n            return this.fetchForum().then((forum) => {\r\n                if (this.discussion.userfullname && this.discussion.parent == 0 && forum.type == 'single') {\r\n                    // Hide author for first post and type single.\r\n                    this.discussion.userfullname = null;\r\n                }\r\n\r\n                // \"forum.istracked\" is more reliable than \"trackPosts\".\r\n                if (typeof forum.istracked != 'undefined') {\r\n                    this.trackPosts = forum.istracked;\r\n                }\r\n\r\n                this.forumId = forum.id;\r\n                this.cmId = forum.cmid;\r\n                this.forum = forum;\r\n            }).catch(() => {\r\n                // Ignore errors.\r\n                this.forum = {};\r\n            });\r\n        }).catch((message) => {\r\n            this.domUtils.showErrorModal(message);\r\n        }).finally(() => {\r\n            this.discussionLoaded = true;\r\n            this.refreshIcon = 'refresh';\r\n            this.syncIcon = 'sync';\r\n\r\n            if (forceMarkAsRead || (hasUnreadPosts && this.trackPosts)) {\r\n                // // Add log in Moodle and mark unread posts as readed.\r\n                this.forumProvider.logDiscussionView(this.discussionId).catch(() => {\r\n                    // Ignore errors.\r\n                }).finally(() => {\r\n                    // Trigger mark read posts.\r\n                    this.eventsProvider.trigger(AddonModForumProvider.MARK_READ_EVENT, {\r\n                        courseId: this.courseId,\r\n                        moduleId: this.cmId\r\n                    }, this.sitesProvider.getCurrentSiteId());\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Tries to synchronize the posts discussion.\r\n     *\r\n     * @param  {boolean} showErrors Whether to show errors in a modal.\r\n     * @return {Promise<any>} Promise resolved when done.\r\n     */\r\n    protected syncDiscussion(showErrors: boolean): Promise<any> {\r\n        return this.forumSync.syncDiscussionReplies(this.discussionId).then((result) => {\r\n            if (result.warnings && result.warnings.length) {\r\n                this.domUtils.showErrorModal(result.warnings[0]);\r\n            }\r\n\r\n            if (result && result.updated) {\r\n                // Sync successful, send event.\r\n                this.eventsProvider.trigger(AddonModForumSyncProvider.MANUAL_SYNCED, {\r\n                    forumId: this.forumId,\r\n                    userId: this.sitesProvider.getCurrentSiteUserId(),\r\n                    source: 'discussion'\r\n                }, this.sitesProvider.getCurrentSiteId());\r\n            }\r\n\r\n            return result.updated;\r\n        }).catch((error) => {\r\n            if (showErrors) {\r\n                this.domUtils.showErrorModalDefault(error, 'core.errorsync', true);\r\n            }\r\n\r\n            return Promise.reject(null);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Refresh the data.\r\n     *\r\n     * @param {any}       [refresher] Refresher.\r\n     * @param {Function}  [done] Function to call when done.\r\n     * @param {boolean}   [showErrors=false] If show errors to the user of hide them.\r\n     * @return {Promise<any>} Promise resolved when done.\r\n     */\r\n    doRefresh(refresher?: any, done?: () => void, showErrors: boolean = false): Promise<any> {\r\n        if (this.discussionLoaded) {\r\n            return this.refreshPosts(true, showErrors).finally(() => {\r\n                refresher && refresher.complete();\r\n                done && done();\r\n            });\r\n        }\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /**\r\n     * Refresh posts.\r\n     *\r\n     * @param  {boolean} [sync]       Whether to try to synchronize the discussion.\r\n     * @param  {boolean} [showErrors] Whether to show errors in a modal.\r\n     * @return {Promise<any>} Promise resolved when done.\r\n     */\r\n    refreshPosts(sync?: boolean, showErrors?: boolean): Promise<any> {\r\n        this.domUtils.scrollToTop(this.content);\r\n        this.refreshIcon = 'spinner';\r\n        this.syncIcon = 'spinner';\r\n\r\n        return this.forumProvider.invalidateDiscussionPosts(this.discussionId).catch(() => {\r\n            // Ignore errors.\r\n        }).then(() => {\r\n            return this.fetchPosts(sync, showErrors);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Function to change posts sorting\r\n     *\r\n     * @param  {SortType} type Sort type.\r\n     * @return {Promise<any>} Promised resolved when done.\r\n     */\r\n    changeSort(type: SortType): Promise<any> {\r\n        this.discussionLoaded = false;\r\n        this.sort = type;\r\n        this.domUtils.scrollToTop(this.content);\r\n\r\n        return this.fetchPosts();\r\n    }\r\n\r\n    /**\r\n     * New post added.\r\n     */\r\n    postListChanged(): void {\r\n        // Trigger an event to notify a new reply.\r\n        const data = {\r\n            forumId: this.forumId,\r\n            discussionId: this.discussionId,\r\n            cmId: this.cmId\r\n        };\r\n        this.eventsProvider.trigger(AddonModForumProvider.REPLY_DISCUSSION_EVENT, data, this.sitesProvider.getCurrentSiteId());\r\n\r\n        this.discussionLoaded = false;\r\n        this.refreshPosts().finally(() => {\r\n            this.discussionLoaded = true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Runs when the page is about to leave and no longer be the active page.\r\n     */\r\n    ionViewWillLeave(): void {\r\n        this.syncObserver && this.syncObserver.off();\r\n        this.syncManualObserver && this.syncManualObserver.off();\r\n    }\r\n\r\n    /**\r\n     * Page destroyed.\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.onlineObserver && this.onlineObserver.unsubscribe();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/forum/pages/discussion/discussion.ts"],"sourceRoot":""}